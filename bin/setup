#!/usr/bin/env ruby
require 'pathname'
require 'yaml'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path("../../",  __FILE__)

def run(command)
  abort "command failed (#{$?}): #{command}" unless system command
end

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts %q[

    ______               _____
    ___  / _____________ ___(_)______   _______ _________   __
    __  /  _  __ \_  __ `/_  /__  __ \  __  __ `/  __ \_ | / /
    _  /___/ /_/ /  /_/ /_  / _  / / /___  /_/ // /_/ /_ |/ /
    /_____/\____/_\__, / /_/  /_/ /_/_(_)\__, / \____/_____/
                 /____/                 /____/
          |___/
  ]

  puts '== Setting up config overrides =='
  default_application_yml = { 'development' => { 'config_key' => nil } }
  File.write('config/application.yml', default_application_yml.to_yaml) unless File.exist?('config/application.yml')

  puts "== Linking service_providers.yml =="
  run "test -r config/service_providers.yml || ln -sv service_providers.localdev.yml config/service_providers.yml"

  puts "== Linking agencies.yml =="
  run "test -r config/agencies.yml || ln -sv agencies.localdev.yml config/agencies.yml"

  puts "== Linking Agreements YAML files =="
  run "test -r config/iaa_gtcs.yml || ln -sv iaa_gtcs.localdev.yml config/iaa_gtcs.yml"
  run "test -r config/iaa_orders.yml || ln -sv iaa_orders.localdev.yml config/iaa_orders.yml"
  run "test -r config/iaa_statuses.yml || ln -sv iaa_statuses.localdev.yml config/iaa_statuses.yml"
  run "test -r config/integration_statuses.yml || ln -sv integration_statuses.localdev.yml config/integration_statuses.yml"
  run "test -r config/integrations.yml || ln -sv integrations.localdev.yml config/integrations.yml"
  run "test -r config/partner_account_statuses.yml || ln -sv partner_account_statuses.localdev.yml config/partner_account_statuses.yml"
  run "test -r config/partner_accounts.yml || ln -sv partner_accounts.localdev.yml config/partner_accounts.yml"

  puts "== Linking sample certs and keys =="
  run "test -r certs || ln -sv certs.example certs"
  run "test -r keys || ln -sv keys.example keys"

  puts "== Copying sample pwned passwords list =="
  run "cp pwned_passwords/pwned_passwords.txt.sample pwned_passwords/pwned_passwords.txt"

  puts "\n== Installing dependencies =="
  run "gem install bundler --conservative"
  run 'gem install foreman --conservative && gem update foreman'
  run "bundle check || bundle install --without deploy production"
  run "yarn install"
  run "gem install thin -v 1.5.1 -- --with-cflags=\"-Wno-error=implicit-function-declaration\""
  run "gem install mailcatcher -- --with-cppflags=-I$(brew --prefix openssl@1.1)/include"

  puts "\n== Preparing database =="
  run 'bin/rake db:create'
  run 'bin/rake db:environment:set'
  run 'bin/rake db:reset'
  run 'bin/rake db:environment:set'
  run 'bin/rake dev:prime'
  run 'bin/rake parallel:setup'

  puts "\n== Cleaning up old assets =="
  run "bin/rake assets:clobber"
  run "RAILS_ENV=test bin/rake assets:clobber"

  puts "\n== Removing old logs and tempfiles =="
  run "rm -f log/*"
  run "rm -rf tmp/cache"
  run "rm -rf tmp/encrypted_doc_storage"

  puts "\n== Restarting application server =="
  run "mkdir -p tmp"
  run "touch tmp/restart.txt"
end
