# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- review
- approval
- deploy

variables:
  ECR_REGISTRY: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
  CI_DEBUG_TRACE: "true"

build-job:
  stage: build
  interruptible: true
  tags:
    - build-pool
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - |-
      KANIKOCFG="\"credsStore\":\"ecr-login\""
      if [ "x${http_proxy}" != "x" -o "x${https_proxy}" != "x" ]; then
        KANIKOCFG="${KANIKOCFG}, \"proxies\": { \"default\": { \"httpProxy\": \"${http_proxy}\", \"httpsProxy\": \"${https_proxy}\", \"noProxy\": \"${no_proxy}\"}}"
      fi
      KANIKOCFG="{ ${KANIKOCFG} }"
      echo "${KANIKOCFG}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${ECR_REGISTRY}/identity-idp/review:${CI_COMMIT_SHA}"
      --build-arg "http_proxy=${http_proxy}" --build-arg "https_proxy=${https_proxy}" --build-arg "no_proxy=${no_proxy}"

include:
- template: Security/SAST.gitlab-ci.yml

sast:
  stage: test
  needs: []

review-app:
  stage: review
  resource_group: $CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov
  image:
    name: dtzar/helm-kubectl:latest
  script:
    - kubectl config get-contexts
    - export CONTEXT=$(kubectl config get-contexts | grep -v CURRENT | awk '{print $1}' | head -1)
    - kubectl config use-context "$CONTEXT"
    - >
      helm upgrade --install --namespace review-apps --debug
      --set idp.image.repository="${ECR_REGISTRY}/identity-idp/review"
      --set idp.image.tag="${CI_COMMIT_SHA}"
      --set idp.ingress.enabled=true
      --set-json idp.env='[
        {"name":"POSTGRES_SSLMODE","value":"prefer"},
        {"name":"POSTGRES_NAME","value":"idp"},
        {"name":"POSTGRES_HOST","value":"$CI_ENVIRONMENT_SLUG-identity-idp-chart-postgres.review-apps"},
        {"name":"POSTGRES_USERNAME","value":"postgres"},
        {"name":"POSTGRES_PASSWORD","value":"postgres"},
        {"name":"POSTGRES_WORKER_SSLMODE","value":"prefer"},
        {"name":"POSTGRES_WORKER_NAME","value":"idp-worker-jobs"},
        {"name":"POSTGRES_WORKER_HOST","value":"$CI_ENVIRONMENT_SLUG-identity-idp-chart-postgres.review-apps"},
        {"name":"POSTGRES_WORKER_USERNAME","value":"postgres"},
        {"name":"POSTGRES_WORKER_PASSWORD","value":"postgres"},
        {"name":"LOGIN_ENV","value":"dev"},
        {"name":"RAILS_OFFLINE","value":"true"},
        {"name":"REDIS_IRS_ATTEMPTS_API_URL","value":"redis://$CI_ENVIRONMENT_SLUG-identity-idp-chart-redis.review-apps:6379/2"},
        {"name":"REDIS_THROTTLE_URL","value":"redis://$CI_ENVIRONMENT_SLUG-identity-idp-chart-redis.review-apps:6379/1"},
        {"name":"REDIS_URL","value":"redis://$CI_ENVIRONMENT_SLUG-identity-idp-chart-redis.review-apps:6379"},
        {"name":"ASSET_HOST","value":"https://$CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov"},
        {"name":"DOMAIN_NAME","value":"$CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov"}
      ]'
      --set-json idp.ingress.hosts='[
        {"host": "$CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov", "paths": [{"path": "/", "pathType": "Prefix"}]}
      ]'
      $CI_ENVIRONMENT_SLUG ./charts
    - echo "DNS may take a while to propagate, so be patient if it doesn't show up right away"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov
    on_stop: stop-review-app
    auto_stop_in: 2 days
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
  
stop-review-app:
  resource_group: $CI_ENVIRONMENT_SLUG.review-app.identitysandbox.gov
  script:
    - export CONTEXT=$(kubectl config get-contexts | grep -v CURRENT | awk '{print $1}' | head -1)
    - kubectl config use-context "$CONTEXT"
    - helm uninstall --namespace review-apps $CI_ENVIRONMENT_SLUG
  stage: review
  image:
    name: dtzar/helm-kubectl:latest
  needs:
    - job: review-app
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never

approve:
  stage: approval
  script:
    - echo "approved!"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: verify
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-job:
  environment: production
  stage: deploy
  script:
  - echo "Deploying application..."
  - echo "Application successfully deployed."
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
