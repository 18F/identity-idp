# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-retry` gem.
# Please instead update this file by running `bin/tapioca gem rspec-retry`.


# source://rspec-retry//lib/rspec/retry/version.rb#1
module RSpec
  class << self
    # source://rspec-core/3.13.1/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.13.1/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.13.1/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-retry//lib/rspec_ext/rspec_ext.rb#2
module RSpec::Core
  class << self
    # source://rspec-core/3.13.1/lib/rspec/core.rb#181
    def path_to_executable; end
  end
end

# source://rspec-retry//lib/rspec_ext/rspec_ext.rb#3
class RSpec::Core::Example
  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#186
  def initialize(example_group_class, description, user_metadata, example_block = T.unsafe(nil)); end

  # Returns the value of attribute attempts.
  #
  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#4
  def attempts; end

  # Sets the attribute attempts
  #
  # @param value the value to set the attribute attempts to.
  #
  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#4
  def attempts=(_arg0); end

  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#6
  def clear_exception; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#174
  def clock; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#174
  def clock=(_arg0); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#76
  def description; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#388
  def display_exception; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#396
  def display_exception=(ex); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#132
  def duplicate_with(metadata_overrides = T.unsafe(nil)); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#230
  def example_group; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#170
  def example_group_instance; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#158
  def exception; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def execution_result; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#439
  def fail_with_exception(reporter, exception); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def file_path; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def full_description; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#117
  def id; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#220
  def inspect; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#87
  def inspect_output; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#456
  def instance_exec(*args, &block); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def location; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#96
  def location_rerun_argument; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#163
  def metadata; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def pending; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#234
  def pending?; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#226
  def reporter; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#111
  def rerun_argument; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#246
  def run(example_group_instance, reporter); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#425
  def set_aggregate_failures_exception(exception); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#412
  def set_exception(exception); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#49
  def skip; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#449
  def skip_with_exception(reporter, exception); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#238
  def skipped?; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#220
  def to_s; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#148
  def update_inherited_metadata(updates); end

  private

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#534
  def assign_generated_description; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#478
  def finish(reporter); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#543
  def generate_description; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#462
  def hooks; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#550
  def location_description; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#530
  def mocks_need_verification?; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#498
  def record_finished(status, reporter); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#516
  def run_after_example; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#503
  def run_before_example; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#473
  def start(reporter); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#524
  def verify_mocks; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#508
  def with_around_and_singleton_context_hooks; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#466
  def with_around_example_hooks; end

  class << self
    # source://rspec-core/3.13.1/lib/rspec/core/example.rb#48
    def delegate_to_metadata(key); end

    # source://rspec-core/3.13.1/lib/rspec/core/example.rb#122
    def parse_id(id); end
  end
end

# source://rspec-retry//lib/rspec_ext/rspec_ext.rb#10
class RSpec::Core::Example::Procsy
  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#362
  def initialize(example, &block); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def <<(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def ==(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def ===(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def >>(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def [](*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def arity(*a, &b); end

  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#15
  def attempts; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def binding(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#350
  def call(*args, &block); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def clock(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def clock=(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def clone(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def curry(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def description(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def dup(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def duplicate_with(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def eql?(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#333
  def example; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def example_group(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def example_group_instance(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def exception(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#374
  def executed?; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def execution_result(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def file_path(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def full_description(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def hash(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def id(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#379
  def inspect; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def inspect_output(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def lambda?(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def location(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def location_rerun_argument(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def metadata(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def parameters(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def pending(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def pending?(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def reporter(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def rerun_argument(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def ruby2_keywords(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#350
  def run(*args, &block); end

  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#11
  def run_with_retry(opts = T.unsafe(nil)); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def skip(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def skipped?(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def source_location(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#358
  def to_proc; end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#339
  def update_inherited_metadata(*a, &b); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#369
  def wrap(&block); end

  # source://rspec-core/3.13.1/lib/rspec/core/example.rb#346
  def yield(*a, &b); end
end

# source://rspec-retry//lib/rspec_ext/rspec_ext.rb#25
class RSpec::Core::ExampleGroup
  # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#707
  def initialize(inspect_output = T.unsafe(nil)); end

  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#34
  def clear_lets; end

  # source://rspec-retry//lib/rspec_ext/rspec_ext.rb#26
  def clear_memoized; end

  # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#99
  def described_class; end

  # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#713
  def inspect; end

  private

  # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#758
  def method_missing(name, *args, **_arg2); end

  class << self
    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#367
    def add_example(example); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#529
    def before_context_ivars; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#466
    def children; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def context(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#542
    def currently_executing_a_context_hook?; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#667
    def declaration_locations; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#246
    def define_example_group_method(name, metadata = T.unsafe(nil)); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#145
    def define_example_method(name, extra_options = T.unsafe(nil)); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#317
    def define_nested_shared_group_method(new_name, report_label = T.unsafe(nil)); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#76
    def delegate_to_metadata(*names); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#460
    def descendant_filtered_examples; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#503
    def descendants; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#78
    def described_class; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#85
    def description; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#700
    def each_instance_variable_for_example(group); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#518
    def ensure_example_groups_are_configured; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def example(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#450
    def examples; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def fexample(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#78
    def file_path; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#455
    def filtered_examples; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#379
    def find_and_eval_shared(label, name, inclusion_location, *args, &customization_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def fit(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def focus(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#655
    def for_filtered_examples(reporter, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def fspecify(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#675
    def id; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#40
    def idempotently_define_singleton_method(name, &definition); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#343
    def include_context(name, *args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#353
    def include_examples(name, *args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def it(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#318
    def it_behaves_like(name, *args, &customization_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#318
    def it_should_behave_like(name, *args, &customization_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#78
    def location; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#51
    def metadata; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#485
    def next_runnable_index_for(file); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#625
    def ordering_strategy; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#508
    def parent_groups; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def pending(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#373
    def remove_example(example); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#359
    def reset_memoized; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#599
    def run(reporter = T.unsafe(nil)); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#585
    def run_after_context_hooks(example_group_instance); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#547
    def run_before_context_hooks(example_group_instance); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#641
    def run_examples(reporter); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#410
    def set_it_up(description, args, registration_collection, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#685
    def set_ivars(instance, ivars); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def skip(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def specify(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#534
    def store_before_context_ivars(example_group_instance); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#395
    def subclass(parent, description, args, registration_collection, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#562
    def superclass_before_context_ivars; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#71
    def superclass_metadata; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#513
    def top_level?; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#680
    def top_level_description; end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#476
    def traverse_tree_until(&block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#727
    def update_inherited_metadata(updates); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#61
    def with_replaced_metadata(meta); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#247
    def xdescribe(*args, &example_group_block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def xexample(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def xit(*all_args, &block); end

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#146
    def xspecify(*all_args, &block); end

    private

    # source://rspec-core/3.13.1/lib/rspec/core/example_group.rb#742
    def method_missing(name, *args); end
  end
end

# source://rspec-retry//lib/rspec/retry/version.rb#2
class RSpec::Retry
  # @return [Retry] a new instance of Retry
  #
  # source://rspec-retry//lib/rspec/retry.rb#44
  def initialize(ex, opts = T.unsafe(nil)); end

  # source://rspec-retry//lib/rspec/retry.rb#66
  def attempts; end

  # source://rspec-retry//lib/rspec/retry.rb#70
  def attempts=(val); end

  # source://rspec-retry//lib/rspec/retry.rb#74
  def clear_lets; end

  # Returns the value of attribute context.
  #
  # source://rspec-retry//lib/rspec/retry.rb#42
  def context; end

  # source://rspec-retry//lib/rspec/retry.rb#50
  def current_example; end

  # @return [Boolean]
  #
  # source://rspec-retry//lib/rspec/retry.rb#103
  def display_try_failure_messages?; end

  # Returns the value of attribute ex.
  #
  # source://rspec-retry//lib/rspec/retry.rb#42
  def ex; end

  # source://rspec-retry//lib/rspec/retry.rb#89
  def exceptions_to_hard_fail; end

  # source://rspec-retry//lib/rspec/retry.rb#94
  def exceptions_to_retry; end

  # source://rspec-retry//lib/rspec/retry.rb#54
  def retry_count; end

  # source://rspec-retry//lib/rspec/retry.rb#107
  def run; end

  # source://rspec-retry//lib/rspec/retry.rb#80
  def sleep_interval; end

  # @return [Boolean]
  #
  # source://rspec-retry//lib/rspec/retry.rb#99
  def verbose_retry?; end

  private

  # @return [Boolean]
  #
  # source://rspec-retry//lib/rspec/retry.rb#183
  def exception_exists_in?(list, exception); end

  # borrowed from ActiveSupport::Inflector
  #
  # source://rspec-retry//lib/rspec/retry.rb#170
  def ordinalize(number); end

  class << self
    # source://rspec-retry//lib/rspec/retry.rb#7
    def setup; end
  end
end

# source://rspec-retry//lib/rspec/retry/version.rb#3
RSpec::Retry::VERSION = T.let(T.unsafe(nil), String)
