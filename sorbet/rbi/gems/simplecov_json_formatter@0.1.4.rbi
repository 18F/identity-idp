# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `simplecov_json_formatter` gem.
# Please instead update this file by running `bin/tapioca gem simplecov_json_formatter`.


# source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#7
module SimpleCov
  class << self
    # source://simplecov/0.22.0/lib/simplecov.rb#174
    def at_exit_behavior; end

    # source://simplecov/0.22.0/lib/simplecov.rb#170
    def clear_result; end

    # source://simplecov/0.22.0/lib/simplecov.rb#86
    def collate(result_filenames, profile = T.unsafe(nil), ignore_timeout: T.unsafe(nil), &block); end

    # source://simplecov/0.22.0/lib/simplecov.rb#223
    def exit_and_report_previous_error(exit_status); end

    # source://simplecov/0.22.0/lib/simplecov.rb#200
    def exit_status_from_exception; end

    # source://simplecov/0.22.0/lib/simplecov.rb#28
    def external_at_exit; end

    # source://simplecov/0.22.0/lib/simplecov.rb#28
    def external_at_exit=(_arg0); end

    # source://simplecov/0.22.0/lib/simplecov.rb#28
    def external_at_exit?; end

    # source://simplecov/0.22.0/lib/simplecov.rb#131
    def filtered(files); end

    # source://simplecov/0.22.0/lib/simplecov.rb#268
    def final_result_process?; end

    # source://simplecov/0.22.0/lib/simplecov.rb#142
    def grouped(files); end

    # source://simplecov/0.22.0/lib/simplecov.rb#162
    def load_adapter(name); end

    # source://simplecov/0.22.0/lib/simplecov.rb#158
    def load_profile(name); end

    # source://simplecov/0.22.0/lib/simplecov.rb#24
    def pid; end

    # source://simplecov/0.22.0/lib/simplecov.rb#24
    def pid=(_arg0); end

    # source://simplecov/0.22.0/lib/simplecov.rb#213
    def previous_error?(error_exit_status); end

    # source://simplecov/0.22.0/lib/simplecov.rb#248
    def process_result(result); end

    # source://simplecov/0.22.0/lib/simplecov.rb#233
    def process_results_and_report_error; end

    # source://simplecov/0.22.0/lib/simplecov.rb#229
    def ready_to_process_results?; end

    # source://simplecov/0.22.0/lib/simplecov.rb#101
    def result; end

    # source://simplecov/0.22.0/lib/simplecov.rb#124
    def result?; end

    # source://simplecov/0.22.0/lib/simplecov.rb#256
    def result_exit_status(result); end

    # source://simplecov/0.22.0/lib/simplecov.rb#296
    def round_coverage(coverage); end

    # source://simplecov/0.22.0/lib/simplecov.rb#186
    def run_exit_tasks!; end

    # source://simplecov/0.22.0/lib/simplecov.rb#24
    def running; end

    # source://simplecov/0.22.0/lib/simplecov.rb#24
    def running=(_arg0); end

    # source://simplecov/0.22.0/lib/simplecov.rb#48
    def start(profile = T.unsafe(nil), &block); end

    # source://simplecov/0.22.0/lib/simplecov.rb#276
    def wait_for_other_processes; end

    # source://simplecov/0.22.0/lib/simplecov.rb#285
    def write_last_run(result); end

    private

    # source://simplecov/0.22.0/lib/simplecov.rb#399
    def adapt_coverage_result; end

    # source://simplecov/0.22.0/lib/simplecov.rb#371
    def add_not_loaded_files(result); end

    # source://simplecov/0.22.0/lib/simplecov.rb#302
    def initial_setup(profile, &block); end

    # source://simplecov/0.22.0/lib/simplecov.rb#363
    def lookup_corresponding_ruby_coverage_name(criterion); end

    # source://simplecov/0.22.0/lib/simplecov.rb#425
    def make_parallel_tests_available; end

    # source://simplecov/0.22.0/lib/simplecov.rb#434
    def probably_running_parallel_tests?; end

    # source://simplecov/0.22.0/lib/simplecov.rb#388
    def process_coverage_result; end

    # source://simplecov/0.22.0/lib/simplecov.rb#410
    def remove_useless_results; end

    # source://simplecov/0.22.0/lib/simplecov.rb#420
    def result_with_not_loaded_files; end

    # source://simplecov/0.22.0/lib/simplecov.rb#314
    def start_coverage_measurement; end

    # source://simplecov/0.22.0/lib/simplecov.rb#349
    def start_coverage_with_criteria; end
  end
end

# source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#8
module SimpleCov::Formatter
  class << self
    # source://simplecov/0.22.0/lib/simplecov/default_formatter.rb#7
    def from_env(env); end
  end
end

# source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#9
class SimpleCov::Formatter::JSONFormatter
  # source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#10
  def format(result); end

  private

  # source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#25
  def export_formatted_result(result_hash); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#20
  def format_result(result); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter.rb#30
  def output_message(result); end
end

# source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#3
module SimpleCovJSONFormatter; end

# source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#4
class SimpleCovJSONFormatter::ResultExporter
  # @return [ResultExporter] a new instance of ResultExporter
  #
  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#7
  def initialize(result_hash); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#11
  def export; end

  private

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#23
  def export_path; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#19
  def json_result; end
end

# source://simplecov_json_formatter//lib/simplecov_json_formatter/result_exporter.rb#5
SimpleCovJSONFormatter::ResultExporter::FILENAME = T.let(T.unsafe(nil), String)

# source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#6
class SimpleCovJSONFormatter::ResultHashFormatter
  # @return [ResultHashFormatter] a new instance of ResultHashFormatter
  #
  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#7
  def initialize(result); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#11
  def format; end

  private

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#20
  def format_files; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#27
  def format_groups; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#47
  def format_source_file(source_file); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/result_hash_formatter.rb#37
  def formatted_result; end
end

# source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#4
class SimpleCovJSONFormatter::SourceFileFormatter
  # @return [SourceFileFormatter] a new instance of SourceFileFormatter
  #
  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#5
  def initialize(source_file); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#10
  def format; end

  private

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#26
  def branch_coverage; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#41
  def branches; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#20
  def line_coverage; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#32
  def lines; end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#56
  def parse_branch(branch); end

  # source://simplecov_json_formatter//lib/simplecov_json_formatter/source_file_formatter.rb#50
  def parse_line(line); end
end
