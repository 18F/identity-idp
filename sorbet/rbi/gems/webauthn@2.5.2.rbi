# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `webauthn` gem.
# Please instead update this file by running `bin/tapioca gem webauthn`.


# source://webauthn//lib/cose/rsapkcs1_algorithm.rb#9
class RSAPKCS1Algorithm < ::COSE::Algorithm::SignatureAlgorithm
  # @return [RSAPKCS1Algorithm] a new instance of RSAPKCS1Algorithm
  #
  # source://webauthn//lib/cose/rsapkcs1_algorithm.rb#12
  def initialize(*args, hash_function:); end

  # Returns the value of attribute hash_function.
  #
  # source://webauthn//lib/cose/rsapkcs1_algorithm.rb#10
  def hash_function; end

  private

  # source://webauthn//lib/cose/rsapkcs1_algorithm.rb#20
  def signature_algorithm_class; end

  # source://webauthn//lib/cose/rsapkcs1_algorithm.rb#28
  def to_pkey(key); end

  # @return [Boolean]
  #
  # source://webauthn//lib/cose/rsapkcs1_algorithm.rb#24
  def valid_key?(key); end
end

# source://webauthn//lib/webauthn/encoder.rb#5
module WebAuthn
  class << self
    # source://webauthn//lib/webauthn/configuration.rb#8
    def configuration; end

    # @yield [configuration]
    #
    # source://webauthn//lib/webauthn/configuration.rb#12
    def configure; end

    # source://webauthn//lib/webauthn/credential_creation_options.rb#9
    def credential_creation_options(rp_name: T.unsafe(nil), user_name: T.unsafe(nil), display_name: T.unsafe(nil), user_id: T.unsafe(nil)); end

    # source://webauthn//lib/webauthn/credential_request_options.rb#6
    def credential_request_options; end

    # source://webauthn//lib/webauthn.rb#12
    def generate_user_id; end

    # source://webauthn//lib/webauthn/encoder.rb#6
    def standard_encoder; end
  end
end

# source://webauthn//lib/webauthn/attestation_object.rb#10
class WebAuthn::AttestationObject
  extend ::Forwardable

  # @return [AttestationObject] a new instance of AttestationObject
  #
  # source://webauthn//lib/webauthn/attestation_object.rb#26
  def initialize(authenticator_data:, attestation_statement:); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def aaguid(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def attestation_certificate_key_id(*args, **_arg1, &block); end

  # Returns the value of attribute attestation_statement.
  #
  # source://webauthn//lib/webauthn/attestation_object.rb#24
  def attestation_statement; end

  # Returns the value of attribute authenticator_data.
  #
  # source://webauthn//lib/webauthn/attestation_object.rb#24
  def authenticator_data; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def credential(*args, **_arg1, &block); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_object.rb#36
  def valid_attestation_statement?(client_data_hash); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_object.rb#31
  def valid_attested_credential?; end

  class << self
    # source://webauthn//lib/webauthn/attestation_object.rb#13
    def deserialize(attestation_object); end

    # source://webauthn//lib/webauthn/attestation_object.rb#17
    def from_map(map); end
  end
end

# Implements https://www.w3.org/TR/2018/CR-webauthn-20180807/#packed-attestation
#
# source://webauthn//lib/webauthn/attestation_statement/base.rb#11
module WebAuthn::AttestationStatement
  class << self
    # source://webauthn//lib/webauthn/attestation_statement.rb#34
    def from(format, statement); end
  end
end

# source://webauthn//lib/webauthn/attestation_statement.rb#20
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_ANDROID_KEY = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#19
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_ANDROID_SAFETYNET = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#22
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_APPLE = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#17
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_FIDO_U2F = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#16
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_NONE = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#18
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_PACKED = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#21
WebAuthn::AttestationStatement::ATTESTATION_FORMAT_TPM = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#21
WebAuthn::AttestationStatement::ATTESTATION_TYPES_WITH_ROOT = T.let(T.unsafe(nil), Array)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#19
WebAuthn::AttestationStatement::ATTESTATION_TYPE_ANONCA = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#17
WebAuthn::AttestationStatement::ATTESTATION_TYPE_ATTCA = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#15
WebAuthn::AttestationStatement::ATTESTATION_TYPE_BASIC = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#18
WebAuthn::AttestationStatement::ATTESTATION_TYPE_BASIC_OR_ATTCA = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#14
WebAuthn::AttestationStatement::ATTESTATION_TYPE_NONE = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#16
WebAuthn::AttestationStatement::ATTESTATION_TYPE_SELF = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/android_key.rb#9
class WebAuthn::AttestationStatement::AndroidKey < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#10
  def valid?(authenticator_data, client_data_hash); end

  private

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#35
  def all_applications_fields_not_set?; end

  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#63
  def android_key_attestation; end

  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#55
  def attestation_type; end

  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#59
  def default_root_certificates; end

  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#51
  def software_enforced; end

  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#47
  def tee_enforced; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#23
  def valid_attestation_challenge?(client_data_hash); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#39
  def valid_authorization_list_origin?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#43
  def valid_authorization_list_purpose?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_key.rb#29
  def valid_certificate_chain?(aaguid: T.unsafe(nil), **_); end
end

# Implements https://www.w3.org/TR/webauthn-1/#sctn-android-safetynet-attestation
#
# source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#10
class WebAuthn::AttestationStatement::AndroidSafetynet < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#11
  def valid?(authenticator_data, client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#55
  def attestation_response; end

  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#46
  def attestation_type; end

  # SafetyNetAttestation returns full chain including root, WebAuthn expects only the x5c certificates
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#51
  def certificates; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#37
  def cts_profile_match?; end

  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#59
  def default_root_certificates; end

  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#63
  def time; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#41
  def valid_certificate_chain?(**_); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#21
  def valid_response?(authenticator_data, client_data_hash); end

  # TODO: improve once the spec has clarifications https://github.com/w3c/webauthn/issues/968
  #
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/android_safetynet.rb#33
  def valid_version?; end
end

# source://webauthn//lib/webauthn/attestation_statement/apple.rb#8
class WebAuthn::AttestationStatement::Apple < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/apple.rb#30
  def valid?(authenticator_data, client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/apple.rb#52
  def attestation_type; end

  # source://webauthn//lib/webauthn/attestation_statement/apple.rb#56
  def cred_cert; end

  # source://webauthn//lib/webauthn/attestation_statement/apple.rb#60
  def default_root_certificates; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/apple.rb#39
  def valid_nonce?(authenticator_data, client_data_hash); end
end

# source://webauthn//lib/webauthn/attestation_statement/apple.rb#28
WebAuthn::AttestationStatement::Apple::NONCE_EXTENSION_OID = T.let(T.unsafe(nil), String)

# Source: https://www.apple.com/certificateauthority/private/
#
# source://webauthn//lib/webauthn/attestation_statement/apple.rb#10
WebAuthn::AttestationStatement::Apple::ROOT_CERTIFICATE = T.let(T.unsafe(nil), OpenSSL::X509::Certificate)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#28
class WebAuthn::AttestationStatement::Base
  # @return [Base] a new instance of Base
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#31
  def initialize(statement); end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#43
  def attestation_certificate; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#47
  def attestation_certificate_key_id; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#39
  def format; end

  # @raise [NotImplementedError]
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#35
  def valid?(_authenticator_data, _client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#76
  def algorithm; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#110
  def attestation_root_certificates_store(aaguid: T.unsafe(nil), attestation_certificate_key_id: T.unsafe(nil)); end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#88
  def attestation_trust_path; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#69
  def certificates; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#166
  def configuration; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#158
  def cose_algorithm; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#55
  def matching_aaguid?(attested_credential_data_aaguid); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#65
  def matching_public_key?(authenticator_data); end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#80
  def raw_certificates; end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#121
  def root_certificates(aaguid: T.unsafe(nil), attestation_certificate_key_id: T.unsafe(nil)); end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#84
  def signature; end

  # Returns the value of attribute statement.
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#53
  def statement; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#94
  def trustworthy?(aaguid: T.unsafe(nil), attestation_certificate_key_id: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#103
  def valid_certificate_chain?(aaguid: T.unsafe(nil), attestation_certificate_key_id: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/base.rb#142
  def valid_signature?(authenticator_data, client_data_hash, public_key = T.unsafe(nil)); end

  # source://webauthn//lib/webauthn/attestation_statement/base.rb#154
  def verification_data(authenticator_data, client_data_hash); end
end

# source://webauthn//lib/webauthn/attestation_statement/base.rb#29
WebAuthn::AttestationStatement::Base::AAGUID_EXTENSION_OID = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement.rb#24
WebAuthn::AttestationStatement::FORMAT_TO_CLASS = T.let(T.unsafe(nil), Hash)

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#9
class WebAuthn::AttestationStatement::FidoU2f < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#15
  def valid?(authenticator_data, client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#50
  def algorithm; end

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#66
  def attestation_type; end

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#42
  def certificate_public_key; end

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#62
  def public_key_u2f(cose_key_data); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#46
  def valid_aaguid?(attested_credential_data_aaguid); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#32
  def valid_certificate_public_key?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#38
  def valid_credential_public_key?(public_key_bytes); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#27
  def valid_format?; end

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#54
  def verification_data(authenticator_data, client_data_hash); end
end

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#10
class WebAuthn::AttestationStatement::FidoU2f::PublicKey
  # @return [PublicKey] a new instance of PublicKey
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#20
  def initialize(data); end

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#31
  def to_uncompressed_point; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#24
  def valid?; end

  private

  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#39
  def cose_key; end

  # Returns the value of attribute data.
  #
  # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#37
  def data; end

  class << self
    # @return [Boolean]
    #
    # source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#14
    def uncompressed_point?(data); end
  end
end

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#11
WebAuthn::AttestationStatement::FidoU2f::PublicKey::COORDINATE_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f/public_key.rb#12
WebAuthn::AttestationStatement::FidoU2f::PublicKey::UNCOMPRESSED_FORM_INDICATOR = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#12
WebAuthn::AttestationStatement::FidoU2f::VALID_ATTESTATION_CERTIFICATE_ALGORITHM = T.let(T.unsafe(nil), COSE::Algorithm::ECDSA)

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#11
WebAuthn::AttestationStatement::FidoU2f::VALID_ATTESTATION_CERTIFICATE_COUNT = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/attestation_statement/fido_u2f.rb#13
WebAuthn::AttestationStatement::FidoU2f::VALID_ATTESTATION_CERTIFICATE_KEY_CURVE = T.let(T.unsafe(nil), COSE::Key::Curve)

# source://webauthn//lib/webauthn/attestation_statement.rb#14
class WebAuthn::AttestationStatement::FormatNotSupportedError < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/attestation_statement/none.rb#7
class WebAuthn::AttestationStatement::None < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/none.rb#8
  def valid?(*_args); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/none.rb#18
  def attestation_type; end
end

# source://webauthn//lib/webauthn/attestation_statement/packed.rb#9
class WebAuthn::AttestationStatement::Packed < ::WebAuthn::AttestationStatement::Base
  # Follows "Verification procedure"
  #
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#11
  def valid?(authenticator_data, client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#55
  def attestation_type; end

  # Check https://www.w3.org/TR/2018/CR-webauthn-20180807/#packed-attestation-cert-requirements
  #
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#43
  def meet_certificate_requirement?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#28
  def self_attestation?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#24
  def valid_algorithm?(credential); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#36
  def valid_ec_public_keys?(credential); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#32
  def valid_format?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/packed.rb#63
  def valid_signature?(authenticator_data, client_data_hash); end
end

# source://webauthn//lib/webauthn/attestation_statement/tpm.rb#10
class WebAuthn::AttestationStatement::TPM < ::WebAuthn::AttestationStatement::Base
  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#20
  def valid?(authenticator_data, client_data_hash); end

  private

  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#72
  def attestation_type; end

  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#68
  def cose_algorithm; end

  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#56
  def default_root_certificates; end

  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#60
  def tpm_algorithm; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#51
  def valid_certificate_chain?(**_); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#35
  def valid_key_attestation?(certified_extra_data, key, aaguid); end

  # source://webauthn//lib/webauthn/attestation_statement/tpm.rb#64
  def ver; end
end

# source://webauthn//lib/webauthn/attestation_statement/tpm.rb#13
WebAuthn::AttestationStatement::TPM::COSE_ALG_TO_TPM = T.let(T.unsafe(nil), Hash)

# source://webauthn//lib/webauthn/attestation_statement/tpm.rb#11
WebAuthn::AttestationStatement::TPM::TPM_V2 = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/attestation_statement/base.rb#12
class WebAuthn::AttestationStatement::UnsupportedAlgorithm < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/authenticator_attestation_response.rb#14
class WebAuthn::AttestationStatementVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_attestation_response.rb#15
class WebAuthn::AttestationTrustworthinessVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#8
class WebAuthn::AttestedCredentialDataFormatError < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/authenticator_attestation_response.rb#16
class WebAuthn::AttestedCredentialVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_assertion_response.rb#12
class WebAuthn::AuthenticatorAssertionResponse < ::WebAuthn::AuthenticatorResponse
  # @return [AuthenticatorAssertionResponse] a new instance of AuthenticatorAssertionResponse
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#31
  def initialize(authenticator_data:, signature:, user_handle: T.unsafe(nil), **options); end

  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#47
  def authenticator_data; end

  # Returns the value of attribute user_handle.
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#29
  def user_handle; end

  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#39
  def verify(expected_challenge, expected_origin = T.unsafe(nil), public_key:, sign_count:, user_verification: T.unsafe(nil), rp_id: T.unsafe(nil)); end

  private

  # Returns the value of attribute authenticator_data_bytes.
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#53
  def authenticator_data_bytes; end

  # Returns the value of attribute signature.
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#53
  def signature; end

  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#68
  def type; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#59
  def valid_sign_count?(stored_sign_count); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#55
  def valid_signature?(webauthn_public_key); end

  class << self
    # source://webauthn//lib/webauthn/authenticator_assertion_response.rb#13
    def from_client(response); end
  end
end

# source://webauthn//lib/webauthn/authenticator_attestation_response.rb#18
class WebAuthn::AuthenticatorAttestationResponse < ::WebAuthn::AuthenticatorResponse
  extend ::Forwardable

  # @return [AuthenticatorAttestationResponse] a new instance of AuthenticatorAttestationResponse
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#32
  def initialize(attestation_object:, **options); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def aaguid(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def attestation_certificate_key(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def attestation_certificate_key_id(*args, **_arg1, &block); end

  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#49
  def attestation_object; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def attestation_statement(*args, **_arg1, &block); end

  # Returns the value of attribute attestation_trust_path.
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#30
  def attestation_trust_path; end

  # Returns the value of attribute attestation_type.
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#30
  def attestation_type; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def authenticator_data(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def credential(*args, **_arg1, &block); end

  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#38
  def verify(expected_challenge, expected_origin = T.unsafe(nil), user_verification: T.unsafe(nil), rp_id: T.unsafe(nil)); end

  private

  # Returns the value of attribute attestation_object_bytes.
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#66
  def attestation_object_bytes; end

  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#68
  def type; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#76
  def valid_attestation_statement?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#72
  def valid_attested_credential?; end

  class << self
    # source://webauthn//lib/webauthn/authenticator_attestation_response.rb#21
    def from_client(response); end
  end
end

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#10
class WebAuthn::AuthenticatorData < ::BinData::Record
  # source://webauthn//lib/webauthn/authenticator_data.rb#86
  def aaguid; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#75
  def attested_credential_data; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#61
  def attested_credential_data_included?; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#69
  def credential; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#39
  def data; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#82
  def extension_data; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#65
  def extension_data_included?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#49
  def user_flagged?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#53
  def user_present?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#57
  def user_verified?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#43
  def valid?; end

  private

  # source://webauthn//lib/webauthn/authenticator_data.rb#110
  def attested_credential_data_length; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#126
  def base_length; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#118
  def extension_data_length; end

  # source://webauthn//lib/webauthn/authenticator_data.rb#100
  def raw_extension_data; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data.rb#96
  def valid_length?; end

  class << self
    # source://webauthn//lib/webauthn/authenticator_data.rb#33
    def deserialize(data); end
  end
end

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#11
class WebAuthn::AuthenticatorData::AttestedCredentialData < ::BinData::Record
  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#43
  def aaguid; end

  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#47
  def credential; end

  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#54
  def length; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#39
  def valid?; end

  private

  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#68
  def public_key; end

  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#72
  def public_key_length; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#62
  def valid_credential_public_key?; end

  class << self
    # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#33
    def deserialize(data); end
  end
end

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#12
WebAuthn::AuthenticatorData::AttestedCredentialData::AAGUID_LENGTH = T.let(T.unsafe(nil), Integer)

# TODO: use keyword_init when we dropped Ruby 2.4 support
#
# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#27
class WebAuthn::AuthenticatorData::AttestedCredentialData::Credential < ::Struct
  # Returns the value of attribute id
  #
  # @return [Object] the current value of id
  def id; end

  # Sets the attribute id
  #
  # @param value [Object] the value to set the attribute id to.
  # @return [Object] the newly set value
  def id=(_); end

  # Returns the value of attribute public_key
  #
  # @return [Object] the current value of public_key
  def public_key; end

  # Sets the attribute public_key
  #
  # @param value [Object] the value to set the attribute public_key to.
  # @return [Object] the newly set value
  def public_key=(_); end

  # source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#28
  def public_key_object; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#15
WebAuthn::AuthenticatorData::AttestedCredentialData::ID_LENGTH_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/authenticator_data/attested_credential_data.rb#13
WebAuthn::AuthenticatorData::AttestedCredentialData::ZEROED_AAGUID = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/authenticator_data.rb#12
WebAuthn::AuthenticatorData::FLAGS_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/authenticator_data.rb#11
WebAuthn::AuthenticatorData::RP_ID_HASH_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/authenticator_data.rb#13
WebAuthn::AuthenticatorData::SIGN_COUNT_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/authenticator_data.rb#8
class WebAuthn::AuthenticatorDataFormatError < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/authenticator_response.rb#12
class WebAuthn::AuthenticatorDataVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#21
class WebAuthn::AuthenticatorResponse
  # @return [AuthenticatorResponse] a new instance of AuthenticatorResponse
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#22
  def initialize(client_data_json:); end

  # source://webauthn//lib/webauthn/authenticator_response.rb#54
  def client_data; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#48
  def valid?(*args, **keyword_arguments); end

  # source://webauthn//lib/webauthn/authenticator_response.rb#26
  def verify(expected_challenge, expected_origin = T.unsafe(nil), user_verification: T.unsafe(nil), rp_id: T.unsafe(nil)); end

  private

  # Returns the value of attribute client_data_json.
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#60
  def client_data_json; end

  # source://webauthn//lib/webauthn/authenticator_response.rb#106
  def rp_id_from_origin(expected_origin); end

  # @raise [NotImplementedError]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#110
  def type; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#92
  def valid_authenticator_data?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#80
  def valid_challenge?(expected_challenge); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#84
  def valid_origin?(expected_origin); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#88
  def valid_rp_id?(rp_id); end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#76
  def valid_token_binding?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#72
  def valid_type?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#98
  def valid_user_presence?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/authenticator_response.rb#102
  def valid_user_verified?; end

  # source://webauthn//lib/webauthn/authenticator_response.rb#62
  def verify_item(item, *args); end
end

# source://webauthn//lib/webauthn/authenticator_response.rb#13
class WebAuthn::ChallengeVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/client_data.rb#11
class WebAuthn::ClientData
  # @return [ClientData] a new instance of ClientData
  #
  # source://webauthn//lib/webauthn/client_data.rb#14
  def initialize(client_data_json); end

  # source://webauthn//lib/webauthn/client_data.rb#22
  def challenge; end

  # source://webauthn//lib/webauthn/client_data.rb#42
  def hash; end

  # source://webauthn//lib/webauthn/client_data.rb#26
  def origin; end

  # source://webauthn//lib/webauthn/client_data.rb#30
  def token_binding; end

  # source://webauthn//lib/webauthn/client_data.rb#18
  def type; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/client_data.rb#34
  def valid_token_binding_format?; end

  private

  # Returns the value of attribute client_data_json.
  #
  # source://webauthn//lib/webauthn/client_data.rb#48
  def client_data_json; end

  # source://webauthn//lib/webauthn/client_data.rb#50
  def data; end
end

# source://webauthn//lib/webauthn/client_data.rb#12
WebAuthn::ClientData::VALID_TOKEN_BINDING_STATUSES = T.let(T.unsafe(nil), Array)

# source://webauthn//lib/webauthn/client_data.rb#9
class WebAuthn::ClientDataMissingError < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/configuration.rb#18
class WebAuthn::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://webauthn//lib/webauthn/configuration.rb#32
  def initialize; end

  # Returns the value of attribute acceptable_attestation_types.
  #
  # source://webauthn//lib/webauthn/configuration.rb#29
  def acceptable_attestation_types; end

  # Sets the attribute acceptable_attestation_types
  #
  # @param value the value to set the attribute acceptable_attestation_types to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#29
  def acceptable_attestation_types=(_arg0); end

  # Returns the value of attribute algorithms.
  #
  # source://webauthn//lib/webauthn/configuration.rb#21
  def algorithms; end

  # Sets the attribute algorithms
  #
  # @param value the value to set the attribute algorithms to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#21
  def algorithms=(_arg0); end

  # Returns the value of attribute attestation_root_certificates_finders.
  #
  # source://webauthn//lib/webauthn/configuration.rb#30
  def attestation_root_certificates_finders; end

  # source://webauthn//lib/webauthn/configuration.rb#48
  def attestation_root_certificates_finders=(finders); end

  # Returns the value of attribute credential_options_timeout.
  #
  # source://webauthn//lib/webauthn/configuration.rb#27
  def credential_options_timeout; end

  # Sets the attribute credential_options_timeout
  #
  # @param value the value to set the attribute credential_options_timeout to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#27
  def credential_options_timeout=(_arg0); end

  # This is the user-data encoder.
  # Used to decode user input and to encode data provided to the user.
  #
  # source://webauthn//lib/webauthn/configuration.rb#44
  def encoder; end

  # Returns the value of attribute encoding.
  #
  # source://webauthn//lib/webauthn/configuration.rb#22
  def encoding; end

  # Sets the attribute encoding
  #
  # @param value the value to set the attribute encoding to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#22
  def encoding=(_arg0); end

  # Returns the value of attribute origin.
  #
  # source://webauthn//lib/webauthn/configuration.rb#23
  def origin; end

  # Sets the attribute origin
  #
  # @param value the value to set the attribute origin to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#23
  def origin=(_arg0); end

  # Returns the value of attribute rp_id.
  #
  # source://webauthn//lib/webauthn/configuration.rb#24
  def rp_id; end

  # Sets the attribute rp_id
  #
  # @param value the value to set the attribute rp_id to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#24
  def rp_id=(_arg0); end

  # Returns the value of attribute rp_name.
  #
  # source://webauthn//lib/webauthn/configuration.rb#25
  def rp_name; end

  # Sets the attribute rp_name
  #
  # @param value the value to set the attribute rp_name to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#25
  def rp_name=(_arg0); end

  # Returns the value of attribute silent_authentication.
  #
  # source://webauthn//lib/webauthn/configuration.rb#28
  def silent_authentication; end

  # Sets the attribute silent_authentication
  #
  # @param value the value to set the attribute silent_authentication to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#28
  def silent_authentication=(_arg0); end

  # Returns the value of attribute verify_attestation_statement.
  #
  # source://webauthn//lib/webauthn/configuration.rb#26
  def verify_attestation_statement; end

  # Sets the attribute verify_attestation_statement
  #
  # @param value the value to set the attribute verify_attestation_statement to.
  #
  # source://webauthn//lib/webauthn/configuration.rb#26
  def verify_attestation_statement=(_arg0); end
end

# source://webauthn//lib/webauthn/configuration.rb#19
WebAuthn::Configuration::DEFAULT_ALGORITHMS = T.let(T.unsafe(nil), Array)

# source://webauthn//lib/webauthn/credential.rb#9
module WebAuthn::Credential
  class << self
    # source://webauthn//lib/webauthn/credential.rb#18
    def from_create(credential); end

    # source://webauthn//lib/webauthn/credential.rb#22
    def from_get(credential); end

    # source://webauthn//lib/webauthn/credential.rb#10
    def options_for_create(**keyword_arguments); end

    # source://webauthn//lib/webauthn/credential.rb#14
    def options_for_get(**keyword_arguments); end
  end
end

# source://webauthn//lib/webauthn/credential_creation_options.rb#20
class WebAuthn::CredentialCreationOptions < ::WebAuthn::CredentialOptions
  # @return [CredentialCreationOptions] a new instance of CredentialCreationOptions
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#25
  def initialize(user_id:, user_name:, attestation: T.unsafe(nil), authenticator_selection: T.unsafe(nil), exclude_credentials: T.unsafe(nil), extensions: T.unsafe(nil), user_display_name: T.unsafe(nil), rp_name: T.unsafe(nil)); end

  # Returns the value of attribute attestation.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def attestation; end

  # Sets the attribute attestation
  #
  # @param value the value to set the attribute attestation to.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def attestation=(_arg0); end

  # Returns the value of attribute authenticator_selection.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def authenticator_selection; end

  # Sets the attribute authenticator_selection
  #
  # @param value the value to set the attribute authenticator_selection to.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def authenticator_selection=(_arg0); end

  # Returns the value of attribute exclude_credentials.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def exclude_credentials; end

  # Sets the attribute exclude_credentials
  #
  # @param value the value to set the attribute exclude_credentials to.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def exclude_credentials=(_arg0); end

  # Returns the value of attribute extensions.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def extensions; end

  # Sets the attribute extensions
  #
  # @param value the value to set the attribute extensions to.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#23
  def extensions=(_arg0); end

  # source://webauthn//lib/webauthn/credential_creation_options.rb#75
  def pub_key_cred_params; end

  # source://webauthn//lib/webauthn/credential_creation_options.rb#81
  def rp; end

  # source://webauthn//lib/webauthn/credential_creation_options.rb#47
  def to_h; end

  # source://webauthn//lib/webauthn/credential_creation_options.rb#85
  def user; end

  private

  # source://webauthn//lib/webauthn/credential_creation_options.rb#93
  def configuration; end

  # Returns the value of attribute rp_name.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#91
  def rp_name; end

  # Returns the value of attribute user_display_name.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#91
  def user_display_name; end

  # Returns the value of attribute user_id.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#91
  def user_id; end

  # Returns the value of attribute user_name.
  #
  # source://webauthn//lib/webauthn/credential_creation_options.rb#91
  def user_name; end
end

# source://webauthn//lib/webauthn/credential_creation_options.rb#21
WebAuthn::CredentialCreationOptions::DEFAULT_RP_NAME = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/credential_entity.rb#4
class WebAuthn::CredentialEntity
  # @return [CredentialEntity] a new instance of CredentialEntity
  #
  # source://webauthn//lib/webauthn/credential_entity.rb#7
  def initialize(name:); end

  # Returns the value of attribute name.
  #
  # source://webauthn//lib/webauthn/credential_entity.rb#5
  def name; end
end

# source://webauthn//lib/webauthn/credential_options.rb#6
class WebAuthn::CredentialOptions
  # source://webauthn//lib/webauthn/credential_options.rb#9
  def challenge; end

  # source://webauthn//lib/webauthn/credential_options.rb#13
  def timeout; end
end

# source://webauthn//lib/webauthn/credential_options.rb#7
WebAuthn::CredentialOptions::CHALLENGE_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/credential_rp_entity.rb#6
class WebAuthn::CredentialRPEntity < ::WebAuthn::CredentialEntity; end

# source://webauthn//lib/webauthn/credential_request_options.rb#15
class WebAuthn::CredentialRequestOptions < ::WebAuthn::CredentialOptions
  # @return [CredentialRequestOptions] a new instance of CredentialRequestOptions
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#18
  def initialize(allow_credentials: T.unsafe(nil), extensions: T.unsafe(nil), user_verification: T.unsafe(nil)); end

  # Returns the value of attribute allow_credentials.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def allow_credentials; end

  # Sets the attribute allow_credentials
  #
  # @param value the value to set the attribute allow_credentials to.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def allow_credentials=(_arg0); end

  # Returns the value of attribute extensions.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def extensions; end

  # Sets the attribute extensions
  #
  # @param value the value to set the attribute extensions to.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def extensions=(_arg0); end

  # source://webauthn//lib/webauthn/credential_request_options.rb#26
  def to_h; end

  # Returns the value of attribute user_verification.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def user_verification; end

  # Sets the attribute user_verification
  #
  # @param value the value to set the attribute user_verification to.
  #
  # source://webauthn//lib/webauthn/credential_request_options.rb#16
  def user_verification=(_arg0); end
end

# source://webauthn//lib/webauthn/credential_user_entity.rb#6
class WebAuthn::CredentialUserEntity < ::WebAuthn::CredentialEntity
  # @return [CredentialUserEntity] a new instance of CredentialUserEntity
  #
  # source://webauthn//lib/webauthn/credential_user_entity.rb#9
  def initialize(id:, display_name: T.unsafe(nil), **keyword_arguments); end

  # Returns the value of attribute display_name.
  #
  # source://webauthn//lib/webauthn/credential_user_entity.rb#7
  def display_name; end

  # Returns the value of attribute id.
  #
  # source://webauthn//lib/webauthn/credential_user_entity.rb#7
  def id; end
end

# source://webauthn//lib/webauthn/encoder.rb#10
class WebAuthn::Encoder
  # @return [Encoder] a new instance of Encoder
  #
  # source://webauthn//lib/webauthn/encoder.rb#16
  def initialize(encoding = T.unsafe(nil)); end

  # source://webauthn//lib/webauthn/encoder.rb#33
  def decode(data); end

  # source://webauthn//lib/webauthn/encoder.rb#20
  def encode(data); end

  # Returns the value of attribute encoding.
  #
  # source://webauthn//lib/webauthn/encoder.rb#14
  def encoding; end
end

# https://www.w3.org/TR/webauthn-2/#base64url-encoding
#
# source://webauthn//lib/webauthn/encoder.rb#12
WebAuthn::Encoder::STANDARD_ENCODING = T.let(T.unsafe(nil), Symbol)

# source://webauthn//lib/webauthn/error.rb#4
class WebAuthn::Error < ::StandardError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#14
class WebAuthn::OriginVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/public_key.rb#10
class WebAuthn::PublicKey
  # @return [PublicKey] a new instance of PublicKey
  #
  # source://webauthn//lib/webauthn/public_key.rb#41
  def initialize(cose_key:); end

  # source://webauthn//lib/webauthn/public_key.rb#49
  def alg; end

  # Returns the value of attribute cose_key.
  #
  # source://webauthn//lib/webauthn/public_key.rb#39
  def cose_key; end

  # source://webauthn//lib/webauthn/public_key.rb#45
  def pkey; end

  # source://webauthn//lib/webauthn/public_key.rb#53
  def verify(signature, verification_data); end

  private

  # source://webauthn//lib/webauthn/public_key.rb#61
  def cose_algorithm; end

  class << self
    # source://webauthn//lib/webauthn/public_key.rb#13
    def deserialize(public_key); end
  end
end

# source://webauthn//lib/webauthn/public_key.rb#11
class WebAuthn::PublicKey::UnsupportedAlgorithm < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/public_key_credential/options.rb#7
class WebAuthn::PublicKeyCredential
  # @return [PublicKeyCredential] a new instance of PublicKeyCredential
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#19
  def initialize(type:, id:, raw_id:, response:, client_extension_outputs: T.unsafe(nil)); end

  # source://webauthn//lib/webauthn/public_key_credential.rb#38
  def authenticator_extension_outputs; end

  # Returns the value of attribute client_extension_outputs.
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#7
  def client_extension_outputs; end

  # Returns the value of attribute id.
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#7
  def id; end

  # Returns the value of attribute raw_id.
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#7
  def raw_id; end

  # Returns the value of attribute response.
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#7
  def response; end

  # source://webauthn//lib/webauthn/public_key_credential.rb#34
  def sign_count; end

  # Returns the value of attribute type.
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#7
  def type; end

  # source://webauthn//lib/webauthn/public_key_credential.rb#27
  def verify(*_args); end

  private

  # source://webauthn//lib/webauthn/public_key_credential.rb#52
  def authenticator_data; end

  # source://webauthn//lib/webauthn/public_key_credential.rb#56
  def encoder; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#48
  def valid_id?; end

  # @return [Boolean]
  #
  # source://webauthn//lib/webauthn/public_key_credential.rb#44
  def valid_type?; end

  class << self
    # source://webauthn//lib/webauthn/public_key_credential.rb#9
    def from_client(credential); end
  end
end

# source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#10
class WebAuthn::PublicKeyCredential::CreationOptions < ::WebAuthn::PublicKeyCredential::Options
  # @return [CreationOptions] a new instance of CreationOptions
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#20
  def initialize(user:, attestation: T.unsafe(nil), authenticator_selection: T.unsafe(nil), exclude_credentials: T.unsafe(nil), exclude: T.unsafe(nil), pub_key_cred_params: T.unsafe(nil), algs: T.unsafe(nil), rp: T.unsafe(nil), **keyword_arguments); end

  # Returns the value of attribute algs.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def algs; end

  # Sets the attribute algs
  #
  # @param value the value to set the attribute algs to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def algs=(_arg0); end

  # Returns the value of attribute attestation.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def attestation; end

  # Sets the attribute attestation
  #
  # @param value the value to set the attribute attestation to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def attestation=(_arg0); end

  # Returns the value of attribute authenticator_selection.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def authenticator_selection; end

  # Sets the attribute authenticator_selection
  #
  # @param value the value to set the attribute authenticator_selection to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def authenticator_selection=(_arg0); end

  # Returns the value of attribute exclude.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def exclude; end

  # Sets the attribute exclude
  #
  # @param value the value to set the attribute exclude to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def exclude=(_arg0); end

  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#58
  def exclude_credentials; end

  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#62
  def pub_key_cred_params; end

  # Returns the value of attribute rp.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def rp; end

  # Sets the attribute rp
  #
  # @param value the value to set the attribute rp to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def rp=(_arg0); end

  # Returns the value of attribute user.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def user; end

  # Sets the attribute user
  #
  # @param value the value to set the attribute user to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#11
  def user=(_arg0); end

  private

  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#68
  def attributes; end

  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#72
  def exclude_credentials_from_exclude; end

  # source://webauthn//lib/webauthn/public_key_credential/creation_options.rb#78
  def pub_key_cred_params_from_algs; end
end

# source://webauthn//lib/webauthn/public_key_credential/entity.rb#7
class WebAuthn::PublicKeyCredential::Entity
  # @return [Entity] a new instance of Entity
  #
  # source://webauthn//lib/webauthn/public_key_credential/entity.rb#10
  def initialize(name:); end

  # source://webauthn//lib/webauthn/public_key_credential/entity.rb#14
  def as_json; end

  # Returns the value of attribute name.
  #
  # source://webauthn//lib/webauthn/public_key_credential/entity.rb#8
  def name; end

  private

  # source://webauthn//lib/webauthn/public_key_credential/entity.rb#38
  def attributes; end

  # source://webauthn//lib/webauthn/public_key_credential/entity.rb#20
  def to_hash; end
end

# source://webauthn//lib/webauthn/public_key_credential/options.rb#8
class WebAuthn::PublicKeyCredential::Options
  # @return [Options] a new instance of Options
  #
  # source://webauthn//lib/webauthn/public_key_credential/options.rb#13
  def initialize(timeout: T.unsafe(nil), extensions: T.unsafe(nil)); end

  # Argument wildcard for Ruby on Rails controller automatic object JSON serialization
  #
  # source://webauthn//lib/webauthn/public_key_credential/options.rb#23
  def as_json(*_arg0); end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#18
  def challenge; end

  # Returns the value of attribute extensions.
  #
  # source://webauthn//lib/webauthn/public_key_credential/options.rb#11
  def extensions; end

  # Returns the value of attribute timeout.
  #
  # source://webauthn//lib/webauthn/public_key_credential/options.rb#11
  def timeout; end

  private

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#67
  def as_public_key_descriptors(ids); end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#47
  def attributes; end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#63
  def configuration; end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#59
  def default_timeout; end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#51
  def encoder; end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#55
  def raw_challenge; end

  # source://webauthn//lib/webauthn/public_key_credential/options.rb#29
  def to_hash; end
end

# source://webauthn//lib/webauthn/public_key_credential/options.rb#9
WebAuthn::PublicKeyCredential::Options::CHALLENGE_LENGTH = T.let(T.unsafe(nil), Integer)

# source://webauthn//lib/webauthn/public_key_credential/rp_entity.rb#7
class WebAuthn::PublicKeyCredential::RPEntity < ::WebAuthn::PublicKeyCredential::Entity
  # @return [RPEntity] a new instance of RPEntity
  #
  # source://webauthn//lib/webauthn/public_key_credential/rp_entity.rb#10
  def initialize(id: T.unsafe(nil), **keyword_arguments); end

  # Returns the value of attribute id.
  #
  # source://webauthn//lib/webauthn/public_key_credential/rp_entity.rb#8
  def id; end

  private

  # source://webauthn//lib/webauthn/public_key_credential/rp_entity.rb#18
  def attributes; end
end

# source://webauthn//lib/webauthn/public_key_credential/request_options.rb#7
class WebAuthn::PublicKeyCredential::RequestOptions < ::WebAuthn::PublicKeyCredential::Options
  # @return [RequestOptions] a new instance of RequestOptions
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#10
  def initialize(rp_id: T.unsafe(nil), allow_credentials: T.unsafe(nil), allow: T.unsafe(nil), user_verification: T.unsafe(nil), **keyword_arguments); end

  # Returns the value of attribute allow.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def allow; end

  # Sets the attribute allow
  #
  # @param value the value to set the attribute allow to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def allow=(_arg0); end

  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#19
  def allow_credentials; end

  # Returns the value of attribute rp_id.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def rp_id; end

  # Sets the attribute rp_id
  #
  # @param value the value to set the attribute rp_id to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def rp_id=(_arg0); end

  # Returns the value of attribute user_verification.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def user_verification; end

  # Sets the attribute user_verification
  #
  # @param value the value to set the attribute user_verification to.
  #
  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#8
  def user_verification=(_arg0); end

  private

  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#29
  def allow_credentials_from_allow; end

  # source://webauthn//lib/webauthn/public_key_credential/request_options.rb#25
  def attributes; end
end

# source://webauthn//lib/webauthn/public_key_credential/user_entity.rb#7
class WebAuthn::PublicKeyCredential::UserEntity < ::WebAuthn::PublicKeyCredential::Entity
  # @return [UserEntity] a new instance of UserEntity
  #
  # source://webauthn//lib/webauthn/public_key_credential/user_entity.rb#10
  def initialize(id:, display_name: T.unsafe(nil), **keyword_arguments); end

  # Returns the value of attribute display_name.
  #
  # source://webauthn//lib/webauthn/public_key_credential/user_entity.rb#8
  def display_name; end

  # Returns the value of attribute id.
  #
  # source://webauthn//lib/webauthn/public_key_credential/user_entity.rb#8
  def id; end

  private

  # source://webauthn//lib/webauthn/public_key_credential/user_entity.rb#19
  def attributes; end
end

# source://webauthn//lib/webauthn/public_key_credential_with_assertion.rb#7
class WebAuthn::PublicKeyCredentialWithAssertion < ::WebAuthn::PublicKeyCredential
  # source://webauthn//lib/webauthn/public_key_credential_with_assertion.rb#31
  def raw_user_handle; end

  # source://webauthn//lib/webauthn/public_key_credential_with_assertion.rb#25
  def user_handle; end

  # source://webauthn//lib/webauthn/public_key_credential_with_assertion.rb#12
  def verify(challenge, public_key:, sign_count:, user_verification: T.unsafe(nil)); end

  class << self
    # source://webauthn//lib/webauthn/public_key_credential_with_assertion.rb#8
    def response_class; end
  end
end

# source://webauthn//lib/webauthn/public_key_credential_with_attestation.rb#7
class WebAuthn::PublicKeyCredentialWithAttestation < ::WebAuthn::PublicKeyCredential
  # source://webauthn//lib/webauthn/public_key_credential_with_attestation.rb#20
  def public_key; end

  # source://webauthn//lib/webauthn/public_key_credential_with_attestation.rb#26
  def raw_public_key; end

  # source://webauthn//lib/webauthn/public_key_credential_with_attestation.rb#12
  def verify(challenge, user_verification: T.unsafe(nil)); end

  class << self
    # source://webauthn//lib/webauthn/public_key_credential_with_attestation.rb#8
    def response_class; end
  end
end

# source://webauthn//lib/webauthn/configuration.rb#16
class WebAuthn::RootCertificateFinderNotSupportedError < ::WebAuthn::Error; end

# source://webauthn//lib/webauthn/authenticator_response.rb#15
class WebAuthn::RpIdVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_assertion_response.rb#10
class WebAuthn::SignCountVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_assertion_response.rb#9
class WebAuthn::SignatureVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#8
WebAuthn::TYPES = T.let(T.unsafe(nil), Hash)

# source://webauthn//lib/webauthn.rb#10
WebAuthn::TYPE_PUBLIC_KEY = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/authenticator_response.rb#16
class WebAuthn::TokenBindingVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#17
class WebAuthn::TypeVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#18
class WebAuthn::UserPresenceVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/authenticator_response.rb#19
class WebAuthn::UserVerifiedVerificationError < ::WebAuthn::VerificationError; end

# source://webauthn//lib/webauthn/version.rb#4
WebAuthn::VERSION = T.let(T.unsafe(nil), String)

# source://webauthn//lib/webauthn/authenticator_response.rb#10
class WebAuthn::VerificationError < ::WebAuthn::Error; end
