# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `saml_idp` gem.
# Please instead update this file by running `bin/tapioca gem saml_idp`.


# TODO: Needs extraction out
#
# source://saml_idp//lib/saml_idp.rb#26
module Saml; end

# source://saml_idp//lib/saml_idp.rb#27
module Saml::XML; end

# source://saml_idp//lib/saml_idp.rb#66
class Saml::XML::Document < ::Nokogiri::XML::Document
  # source://saml_idp//lib/saml_idp.rb#89
  def gather_errors(fingerprint, options = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp.rb#85
  def signature_namespace; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp.rb#67
  def signed?; end

  # source://saml_idp//lib/saml_idp.rb#81
  def signed_document; end

  # source://saml_idp//lib/saml_idp.rb#99
  def to_xml; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp.rb#95
  def valid_sig_with_sha256?(cert, options = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp.rb#76
  def valid_signature?(fingerprint, options = T.unsafe(nil)); end

  private

  # source://saml_idp//lib/saml_idp.rb#71
  def options_have_signature(options); end
end

# source://saml_idp//lib/saml_idp.rb#28
module Saml::XML::Namespaces; end

# source://saml_idp//lib/saml_idp.rb#30
Saml::XML::Namespaces::ASSERTION = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#42
module Saml::XML::Namespaces::AuthnContext; end

# source://saml_idp//lib/saml_idp.rb#43
module Saml::XML::Namespaces::AuthnContext::ClassRef; end

# source://saml_idp//lib/saml_idp.rb#44
Saml::XML::Namespaces::AuthnContext::ClassRef::PASSWORD = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#45
Saml::XML::Namespaces::AuthnContext::ClassRef::PASSWORD_PROTECTED = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#38
module Saml::XML::Namespaces::Consents; end

# source://saml_idp//lib/saml_idp.rb#39
Saml::XML::Namespaces::Consents::UNSPECIFIED = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#53
module Saml::XML::Namespaces::Formats; end

# source://saml_idp//lib/saml_idp.rb#54
module Saml::XML::Namespaces::Formats::Attr; end

# source://saml_idp//lib/saml_idp.rb#55
Saml::XML::Namespaces::Formats::Attr::URI = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#58
module Saml::XML::Namespaces::Formats::NameId; end

# source://saml_idp//lib/saml_idp.rb#59
Saml::XML::Namespaces::Formats::NameId::EMAIL_ADDRESS = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#61
Saml::XML::Namespaces::Formats::NameId::PERSISTENT = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#60
Saml::XML::Namespaces::Formats::NameId::TRANSIENT = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#29
Saml::XML::Namespaces::METADATA = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#49
module Saml::XML::Namespaces::Methods; end

# source://saml_idp//lib/saml_idp.rb#50
Saml::XML::Namespaces::Methods::BEARER = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#32
Saml::XML::Namespaces::PROTOCOL = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#31
Saml::XML::Namespaces::SIGNATURE = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#34
module Saml::XML::Namespaces::Statuses; end

# source://saml_idp//lib/saml_idp.rb#35
Saml::XML::Namespaces::Statuses::SUCCESS = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp.rb#1
module SamlIdp
  class << self
    # source://saml_idp//lib/saml_idp.rb#12
    def config; end

    # @yield [config]
    #
    # source://saml_idp//lib/saml_idp.rb#16
    def configure; end

    # source://saml_idp//lib/saml_idp.rb#20
    def metadata; end
  end
end

# source://saml_idp//lib/saml_idp/algorithmable.rb#2
module SamlIdp::Algorithmable
  private

  # source://saml_idp//lib/saml_idp/algorithmable.rb#3
  def algorithm; end

  # source://saml_idp//lib/saml_idp/algorithmable.rb#15
  def algorithm_name; end
end

# source://saml_idp//lib/saml_idp/assertion_builder.rb#5
class SamlIdp::AssertionBuilder
  include ::SamlIdp::Algorithmable
  include ::SamlIdp::Signable
  extend ::SamlIdp::Signable::ClassMethods

  # @return [AssertionBuilder] a new instance of AssertionBuilder
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#15
  def initialize(reference_id, issuer_uri, principal, audience_uri, saml_request_id, saml_acs_url, raw_algorithm, authn_context_classref, name_id_format, x509_certificate, secret_key, expiry = T.unsafe(nil), encryption_opts = T.unsafe(nil)); end

  # Returns the value of attribute audience_uri.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def audience_uri; end

  # Sets the attribute audience_uri
  #
  # @param value the value to set the attribute audience_uri to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def audience_uri=(_arg0); end

  # Returns the value of attribute authn_context_classref.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def authn_context_classref; end

  # Sets the attribute authn_context_classref
  #
  # @param value the value to set the attribute authn_context_classref to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def authn_context_classref=(_arg0); end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#12
  def config(*_arg0, **_arg1, &_arg2); end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#101
  def encrypt(opts = T.unsafe(nil)); end

  # Returns the value of attribute encryption_opts.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def encryption_opts; end

  # Sets the attribute encryption_opts
  #
  # @param value the value to set the attribute encryption_opts to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def encryption_opts=(_arg0); end

  # Returns the value of attribute expiry.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def expiry; end

  # Sets the attribute expiry
  #
  # @param value the value to set the attribute expiry to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def expiry=(_arg0); end

  # Returns the value of attribute issuer_uri.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def issuer_uri; end

  # Sets the attribute issuer_uri
  #
  # @param value the value to set the attribute issuer_uri to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def issuer_uri=(_arg0); end

  # Returns the value of attribute name_id_format.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def name_id_format; end

  # Sets the attribute name_id_format
  #
  # @param value the value to set the attribute name_id_format to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def name_id_format=(_arg0); end

  # Returns the value of attribute principal.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def principal; end

  # Sets the attribute principal
  #
  # @param value the value to set the attribute principal to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def principal=(_arg0); end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#46
  def raw; end

  # Returns the value of attribute raw_algorithm.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def raw_algorithm; end

  # Sets the attribute raw_algorithm
  #
  # @param value the value to set the attribute raw_algorithm to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def raw_algorithm=(_arg0); end

  # Returns the value of attribute reference_id.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#8
  def reference_id; end

  # Sets the attribute reference_id
  #
  # @param value the value to set the attribute reference_id to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#8
  def reference_id=(_arg0); end

  # Returns the value of attribute saml_acs_url.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def saml_acs_url; end

  # Sets the attribute saml_acs_url
  #
  # @param value the value to set the attribute saml_acs_url to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def saml_acs_url=(_arg0); end

  # Returns the value of attribute saml_request_id.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def saml_request_id; end

  # Sets the attribute saml_request_id
  #
  # @param value the value to set the attribute saml_request_id to.
  #
  # source://saml_idp//lib/saml_idp/assertion_builder.rb#9
  def saml_request_id=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#14
  def secret_key=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#13
  def x509_certificate=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#110
  def asserted_attributes; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#46
  def fresh; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#119
  def get_values_for(friendly_name, getter); end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#186
  def iso; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#136
  def name_id; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#141
  def name_id_getter; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#171
  def not_before; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#176
  def not_on_or_after_condition; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#181
  def not_on_or_after_subject; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#161
  def now; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#166
  def now_iso; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#156
  def reference_string; end

  # source://saml_idp//lib/saml_idp/assertion_builder.rb#151
  def sp_name_id_format; end
end

# source://saml_idp//lib/saml_idp/attribute_decorator.rb#3
class SamlIdp::AttributeDecorator < ::SimpleDelegator
  # @return [AttributeDecorator] a new instance of AttributeDecorator
  #
  # source://saml_idp//lib/saml_idp/attribute_decorator.rb#6
  def initialize(*_arg0); end

  # source://saml_idp//lib/saml_idp/attribute_decorator.rb#15
  def friendly_name; end

  # source://saml_idp//lib/saml_idp/attribute_decorator.rb#11
  def name; end

  # source://saml_idp//lib/saml_idp/attribute_decorator.rb#19
  def name_format; end

  # source://delegate/0.3.1/delegate.rb#318
  def source; end

  # source://saml_idp//lib/saml_idp/attribute_decorator.rb#23
  def values; end
end

# source://saml_idp//lib/saml_idp/attributeable.rb#2
module SamlIdp::Attributeable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::SamlIdp::Attributeable::ClassMethods

  # source://saml_idp//lib/saml_idp/attributeable.rb#5
  def initialize(attributes = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#9
  def attributes; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#13
  def attributes=(new_attributes); end
end

# source://saml_idp//lib/saml_idp/attributeable.rb#17
module SamlIdp::Attributeable::ClassMethods
  # source://saml_idp//lib/saml_idp/attributeable.rb#18
  def attribute(att); end
end

# source://saml_idp//lib/saml_idp/configurator.rb#3
class SamlIdp::Configurator
  # @return [Configurator] a new instance of Configurator
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#10
  def initialize; end

  # Returns the value of attribute algorithm.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def algorithm; end

  # Sets the attribute algorithm
  #
  # @param value the value to set the attribute algorithm to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def algorithm=(_arg0); end

  # Returns the value of attribute attribute_service_location.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def attribute_service_location; end

  # Sets the attribute attribute_service_location
  #
  # @param value the value to set the attribute attribute_service_location to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def attribute_service_location=(_arg0); end

  # Returns the value of attribute attributes.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def attributes; end

  # Sets the attribute attributes
  #
  # @param value the value to set the attribute attributes to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def attributes=(_arg0); end

  # Returns the value of attribute base_saml_location.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def base_saml_location; end

  # Sets the attribute base_saml_location
  #
  # @param value the value to set the attribute base_saml_location to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def base_saml_location=(_arg0); end

  # Returns the value of attribute entity_id.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def entity_id; end

  # Sets the attribute entity_id
  #
  # @param value the value to set the attribute entity_id to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def entity_id=(_arg0); end

  # formats
  # getter
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#24
  def name_id; end

  # Returns the value of attribute organization_name.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def organization_name; end

  # Sets the attribute organization_name
  #
  # @param value the value to set the attribute organization_name to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def organization_name=(_arg0); end

  # Returns the value of attribute organization_url.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def organization_url; end

  # Sets the attribute organization_url
  #
  # @param value the value to set the attribute organization_url to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def organization_url=(_arg0); end

  # Returns the value of attribute password.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def password; end

  # Sets the attribute password
  #
  # @param value the value to set the attribute password to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def password=(_arg0); end

  # Returns the value of attribute pkcs11.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def pkcs11; end

  # Sets the attribute pkcs11
  #
  # @param value the value to set the attribute pkcs11 to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def pkcs11=(_arg0); end

  # Returns the value of attribute reference_id_generator.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def reference_id_generator; end

  # Sets the attribute reference_id_generator
  #
  # @param value the value to set the attribute reference_id_generator to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def reference_id_generator=(_arg0); end

  # Returns the value of attribute remote_logout_service_post_location.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def remote_logout_service_post_location; end

  # Sets the attribute remote_logout_service_post_location
  #
  # @param value the value to set the attribute remote_logout_service_post_location to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def remote_logout_service_post_location=(_arg0); end

  # Returns the value of attribute secret_key.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def secret_key; end

  # Sets the attribute secret_key
  #
  # @param value the value to set the attribute secret_key to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def secret_key=(_arg0); end

  # Returns the value of attribute service_provider.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def service_provider; end

  # Sets the attribute service_provider
  #
  # @param value the value to set the attribute service_provider to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def service_provider=(_arg0); end

  # Returns the value of attribute single_logout_service_post_location.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def single_logout_service_post_location; end

  # Sets the attribute single_logout_service_post_location
  #
  # @param value the value to set the attribute single_logout_service_post_location to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def single_logout_service_post_location=(_arg0); end

  # Returns the value of attribute single_service_post_location.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def single_service_post_location; end

  # Sets the attribute single_service_post_location
  #
  # @param value the value to set the attribute single_service_post_location to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def single_service_post_location=(_arg0); end

  # source://saml_idp//lib/saml_idp/configurator.rb#28
  def technical_contact; end

  # Returns the value of attribute x509_certificate.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def x509_certificate; end

  # Sets the attribute x509_certificate
  #
  # @param value the value to set the attribute x509_certificate to.
  #
  # source://saml_idp//lib/saml_idp/configurator.rb#4
  def x509_certificate=(_arg0); end
end

# source://saml_idp//lib/saml_idp/configurator.rb#32
class SamlIdp::Configurator::TechnicalContact < ::OpenStruct
  # source://saml_idp//lib/saml_idp/configurator.rb#33
  def mail_to_string; end
end

# source://saml_idp//lib/saml_idp/controller.rb#8
module SamlIdp::Controller
  extend ::ActiveSupport::Concern

  # Returns the value of attribute algorithm.
  #
  # source://saml_idp//lib/saml_idp/controller.rb#15
  def algorithm; end

  # Sets the attribute algorithm
  #
  # @param value the value to set the attribute algorithm to.
  #
  # source://saml_idp//lib/saml_idp/controller.rb#15
  def algorithm=(_arg0); end

  # Returns the value of attribute saml_request.
  #
  # source://saml_idp//lib/saml_idp/controller.rb#15
  def saml_request; end

  # Sets the attribute saml_request
  #
  # @param value the value to set the attribute saml_request to.
  #
  # source://saml_idp//lib/saml_idp/controller.rb#15
  def saml_request=(_arg0); end

  protected

  # source://saml_idp//lib/saml_idp/controller.rb#35
  def authn_context_classref; end

  # source://saml_idp//lib/saml_idp/controller.rb#31
  def decode_request(raw_saml_request); end

  # source://saml_idp//lib/saml_idp/controller.rb#129
  def default_algorithm; end

  # source://saml_idp//lib/saml_idp/controller.rb#39
  def encode_authn_response(principal, opts = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/controller.rb#75
  def encode_logout_response(_principal, opts = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/controller.rb#89
  def encode_response(principal, opts = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/controller.rb#125
  def get_saml_reference_id; end

  # source://saml_idp//lib/saml_idp/controller.rb#121
  def get_saml_response_id; end

  # source://saml_idp//lib/saml_idp/controller.rb#99
  def issuer_uri; end

  # source://saml_idp//lib/saml_idp/controller.rb#133
  def log(msg, level: T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/controller.rb#113
  def saml_acs_url; end

  # source://saml_idp//lib/saml_idp/controller.rb#117
  def saml_logout_url; end

  # source://saml_idp//lib/saml_idp/controller.rb#109
  def saml_request_id; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/controller.rb#105
  def valid_saml_request?; end

  # source://saml_idp//lib/saml_idp/controller.rb#19
  def validate_saml_request(raw_saml_request = T.unsafe(nil)); end
end

# source://saml_idp//lib/saml_idp/default.rb#2
module SamlIdp::Default; end

# source://saml_idp//lib/saml_idp/default.rb#26
SamlIdp::Default::FINGERPRINT = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/default.rb#3
SamlIdp::Default::NAME_ID_FORMAT = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/default.rb#27
SamlIdp::Default::SECRET_KEY = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/default.rb#44
SamlIdp::Default::SERVICE_PROVIDER = T.let(T.unsafe(nil), Hash)

# source://saml_idp//lib/saml_idp/default.rb#4
SamlIdp::Default::X509_CERTIFICATE = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/engine.rb#2
class SamlIdp::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

# source://saml_idp//lib/saml_idp/hashable.rb#2
module SamlIdp::Hashable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::SamlIdp::Hashable::ClassMethods

  # source://saml_idp//lib/saml_idp/hashable.rb#5
  def hashables; end

  # source://saml_idp//lib/saml_idp/hashable.rb#9
  def to_h; end
end

# source://saml_idp//lib/saml_idp/hashable.rb#15
module SamlIdp::Hashable::ClassMethods
  # source://saml_idp//lib/saml_idp/hashable.rb#20
  def hashable(method_name); end

  # source://saml_idp//lib/saml_idp/hashable.rb#16
  def hashables; end
end

class SamlIdp::IdpController < ::ActionController::Base
  include ::SamlIdp::Controller

  def create; end
  def logout; end
  def new; end
  def show; end

  protected

  def idp_authenticate(email, password); end
  def idp_make_saml_response(person); end

  private

  # source://actionview/7.2.1.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def idp_logout; end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.2.1.1/lib/abstract_controller/helpers.rb#13
    def _helper_methods; end

    # source://actionpack/7.2.1.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end

module SamlIdp::IdpController::HelperMethods
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::ActionController::Base::HelperMethods

  # source://saml_idp//lib/saml_idp/controller.rb#12
  def saml_acs_url(*_arg0, **_arg1, &_arg2); end
end

# source://saml_idp//lib/saml_idp/incoming_metadata.rb#4
class SamlIdp::IncomingMetadata
  include ::SamlIdp::Hashable
  extend ::SamlIdp::Hashable::ClassMethods

  # @return [IncomingMetadata] a new instance of IncomingMetadata
  #
  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#11
  def initialize(raw = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#84
  def assertion_consumer_services; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#104
  def company; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#34
  def contact_person; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#131
  def contact_person_document; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#29
  def display_name; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#15
  def document; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#113
  def email_address; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#54
  def encryption_certificate; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#95
  def given_name; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#127
  def idp_descriptor_document; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#73
  def name_id_formats; end

  # Returns the value of attribute raw.
  #
  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#6
  def raw; end

  # Sets the attribute raw
  #
  # @param value the value to set the attribute raw to.
  #
  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#6
  def raw=(_arg0); end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#119
  def role_descriptor_document; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#123
  def service_provider_descriptor_document; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#19
  def sign_assertions; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#45
  def signing_certificate; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#63
  def single_logout_services; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#100
  def surname; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#108
  def telephone_number; end

  private

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#135
  def metadata_namespace; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#140
  def signature_namespace; end

  # source://saml_idp//lib/saml_idp/incoming_metadata.rb#8
  def xpath(*_arg0, **_arg1, &_arg2); end
end

# source://saml_idp//lib/saml_idp/logout_builder.rb#3
class SamlIdp::LogoutBuilder
  include ::SamlIdp::Signable
  extend ::SamlIdp::Signable::ClassMethods

  # this is an abstract base class.
  #
  # source://saml_idp//lib/saml_idp/logout_builder.rb#7
  def build; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#15
  def digest; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#19
  def encoded; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#23
  def raw; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#11
  def reference_id; end

  # source://saml_idp//lib/saml_idp/signable.rb#12
  def reference_id=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#14
  def secret_key=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#13
  def x509_certificate=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/logout_builder.rb#27
  def encode; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#37
  def now_iso; end

  # source://saml_idp//lib/saml_idp/logout_builder.rb#32
  def response_id_string; end
end

# source://saml_idp//lib/saml_idp/logout_response_builder.rb#3
class SamlIdp::LogoutResponseBuilder < ::SamlIdp::LogoutBuilder
  # @return [LogoutResponseBuilder] a new instance of LogoutResponseBuilder
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#7
  def initialize(response_id, issuer_uri, saml_slo_url, saml_request_id, algorithm, x509_certificate = T.unsafe(nil), secret_key = T.unsafe(nil)); end

  # Returns the value of attribute algorithm.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def algorithm; end

  # Sets the attribute algorithm
  #
  # @param value the value to set the attribute algorithm to.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def algorithm=(_arg0); end

  # Returns the value of attribute issuer_uri.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def issuer_uri; end

  # Sets the attribute issuer_uri
  #
  # @param value the value to set the attribute issuer_uri to.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def issuer_uri=(_arg0); end

  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#26
  def reference_id; end

  # Returns the value of attribute response_id.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def response_id; end

  # Sets the attribute response_id
  #
  # @param value the value to set the attribute response_id to.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def response_id=(_arg0); end

  # Returns the value of attribute saml_request_id.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def saml_request_id; end

  # Sets the attribute saml_request_id
  #
  # @param value the value to set the attribute saml_request_id to.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def saml_request_id=(_arg0); end

  # Returns the value of attribute saml_slo_url.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def saml_slo_url; end

  # Sets the attribute saml_slo_url
  #
  # @param value the value to set the attribute saml_slo_url to.
  #
  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#4
  def saml_slo_url=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/logout_response_builder.rb#30
  def build; end
end

# source://saml_idp//lib/saml_idp/metadata_builder.rb#6
class SamlIdp::MetadataBuilder
  include ::SamlIdp::Algorithmable
  include ::SamlIdp::Signable
  extend ::SamlIdp::Signable::ClassMethods

  # @return [MetadataBuilder] a new instance of MetadataBuilder
  #
  # source://saml_idp//lib/saml_idp/metadata_builder.rb#11
  def initialize(configurator = T.unsafe(nil), x509_certificate = T.unsafe(nil), secret_key = T.unsafe(nil)); end

  # Returns the value of attribute configurator.
  #
  # source://saml_idp//lib/saml_idp/metadata_builder.rb#9
  def configurator; end

  # Sets the attribute configurator
  #
  # @param value the value to set the attribute configurator to.
  #
  # source://saml_idp//lib/saml_idp/metadata_builder.rb#9
  def configurator=(_arg0); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#21
  def fresh; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#21
  def raw; end

  # source://saml_idp//lib/saml_idp/signable.rb#12
  def reference_id; end

  # source://saml_idp//lib/saml_idp/signable.rb#12
  def reference_id=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#14
  def secret_key=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#13
  def x509_certificate=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def attribute_service_location; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#124
  def attributes; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#76
  def build_attribute(el); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#99
  def build_contact(el); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#58
  def build_key_descriptor(el); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#69
  def build_name_id_formats(el); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#90
  def build_organization(el); end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#114
  def entity_id; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#132
  def name_id_formats; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def organization_name; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def organization_url; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#119
  def protocol_enumeration; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#137
  def raw_algorithm; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#109
  def reference_string; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def remote_logout_service_post_location; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def single_logout_service_post_location; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def single_service_post_location; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def support_email; end

  # source://saml_idp//lib/saml_idp/metadata_builder.rb#152
  def technical_contact; end
end

# source://saml_idp//lib/saml_idp/name_id_formatter.rb#2
class SamlIdp::NameIdFormatter
  # @return [NameIdFormatter] a new instance of NameIdFormatter
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#5
  def initialize(list, sp_name_id_format = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#10
  def all; end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#23
  def chosen; end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#32
  def default_name_getter_hash; end

  # Returns the value of attribute list.
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#3
  def list; end

  # Sets the attribute list
  #
  # @param value the value to set the attribute list to.
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#3
  def list=(_arg0); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#43
  def one_one_nameid_format?(format); end

  # Returns the value of attribute sp_name_id_format.
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#3
  def sp_name_id_format; end

  # Sets the attribute sp_name_id_format
  #
  # @param value the value to set the attribute sp_name_id_format to.
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#3
  def sp_name_id_format=(_arg0); end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#39
  def symbolized_name_id_format; end

  private

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#54
  def build(version, key_val); end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#68
  def build_getter(getter_val); end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#82
  def one_one; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#77
  def split?; end

  # source://saml_idp//lib/saml_idp/name_id_formatter.rb#89
  def two_zero; end
end

# source://saml_idp//lib/saml_idp/persisted_metadata.rb#3
class SamlIdp::PersistedMetadata
  include ::SamlIdp::Attributeable
  extend ::SamlIdp::Attributeable::ClassMethods

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/persisted_metadata.rb#6
  def sign_assertions?; end
end

# source://saml_idp//lib/saml_idp/request.rb#4
class SamlIdp::Request
  # @return [Request] a new instance of Request
  #
  # source://saml_idp//lib/saml_idp/request.rb#42
  def initialize(raw_xml = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/request.rb#92
  def acs_url; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#52
  def authn_request?; end

  # source://saml_idp//lib/saml_idp/request.rb#169
  def cert_errors; end

  # Returns the value of attribute errors.
  #
  # source://saml_idp//lib/saml_idp/request.rb#35
  def errors; end

  # source://saml_idp//lib/saml_idp/request.rb#188
  def fingerprint(cert); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#68
  def force_authn?; end

  # source://saml_idp//lib/saml_idp/request.rb#215
  def issuer; end

  # source://saml_idp//lib/saml_idp/request.rb#109
  def log(msg); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#48
  def logout_request?; end

  # source://saml_idp//lib/saml_idp/request.rb#97
  def logout_url; end

  # source://saml_idp//lib/saml_idp/request.rb#149
  def matching_cert; end

  # source://saml_idp//lib/saml_idp/request.rb#220
  def name_id; end

  # source://saml_idp//lib/saml_idp/request.rb#224
  def name_id_format; end

  # Returns the value of attribute options.
  #
  # source://saml_idp//lib/saml_idp/request.rb#34
  def options; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  #
  # source://saml_idp//lib/saml_idp/request.rb#34
  def options=(_arg0); end

  # Returns the value of attribute raw_xml.
  #
  # source://saml_idp//lib/saml_idp/request.rb#34
  def raw_xml; end

  # Sets the attribute raw_xml
  #
  # @param value the value to set the attribute raw_xml to.
  #
  # source://saml_idp//lib/saml_idp/request.rb#34
  def raw_xml=(_arg0); end

  # source://saml_idp//lib/saml_idp/request.rb#60
  def request; end

  # source://saml_idp//lib/saml_idp/request.rb#56
  def request_id; end

  # source://saml_idp//lib/saml_idp/request.rb#74
  def requested_authn_context_comparison; end

  # source://saml_idp//lib/saml_idp/request.rb#78
  def requested_authn_contexts; end

  # source://saml_idp//lib/saml_idp/request.rb#86
  def requested_vtr_authn_contexts; end

  # source://saml_idp//lib/saml_idp/request.rb#101
  def response_url; end

  # source://saml_idp//lib/saml_idp/request.rb#209
  def service_provider; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#205
  def service_provider?; end

  # source://saml_idp//lib/saml_idp/request.rb#230
  def session_index; end

  # source://saml_idp//lib/saml_idp/request.rb#160
  def sha256_validation_matching_cert; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#192
  def signed?; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#117
  def valid?; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/request.rb#196
  def valid_signature?; end

  private

  # source://saml_idp//lib/saml_idp/request.rb#284
  def assertion; end

  # source://saml_idp//lib/saml_idp/request.rb#255
  def authn_context_node; end

  # source://saml_idp//lib/saml_idp/request.rb#262
  def authn_context_nodes; end

  # source://saml_idp//lib/saml_idp/request.rb#269
  def authn_request; end

  # source://saml_idp//lib/saml_idp/request.rb#37
  def config(*_arg0, **_arg1, &_arg2); end

  # source://saml_idp//lib/saml_idp/request.rb#234
  def document; end

  # source://saml_idp//lib/saml_idp/request.rb#274
  def logout_request; end

  # source://saml_idp//lib/saml_idp/request.rb#239
  def name_id_format_node; end

  # source://saml_idp//lib/saml_idp/request.rb#248
  def requested_authn_context_node; end

  # source://saml_idp//lib/saml_idp/request.rb#279
  def samlp; end

  # source://saml_idp//lib/saml_idp/request.rb#294
  def service_provider_finder; end

  # source://saml_idp//lib/saml_idp/request.rb#289
  def signature_namespace; end

  # source://saml_idp//lib/saml_idp/request.rb#39
  def xpath(*_arg0, **_arg1, &_arg2); end

  class << self
    # source://saml_idp//lib/saml_idp/request.rb#7
    def from_deflated_request(raw, options = T.unsafe(nil)); end

    # source://saml_idp//lib/saml_idp/request.rb#26
    def log(msg, level: T.unsafe(nil)); end
  end
end

# source://saml_idp//lib/saml_idp/request.rb#5
SamlIdp::Request::VTR_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://saml_idp//lib/saml_idp/response_builder.rb#3
class SamlIdp::ResponseBuilder
  include ::SamlIdp::Signable
  extend ::SamlIdp::Signable::ClassMethods

  # @return [ResponseBuilder] a new instance of ResponseBuilder
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#9
  def initialize(response_id, issuer_uri, saml_acs_url, saml_request_id, assertion_and_signature, algorithm, x509_certificate, secret_key); end

  # Returns the value of attribute algorithm.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def algorithm; end

  # Sets the attribute algorithm
  #
  # @param value the value to set the attribute algorithm to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def algorithm=(_arg0); end

  # Returns the value of attribute assertion_and_signature.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def assertion_and_signature; end

  # Sets the attribute assertion_and_signature
  #
  # @param value the value to set the attribute assertion_and_signature to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def assertion_and_signature=(_arg0); end

  # source://saml_idp//lib/saml_idp/response_builder.rb#29
  def encoded; end

  # Returns the value of attribute issuer_uri.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def issuer_uri; end

  # Sets the attribute issuer_uri
  #
  # @param value the value to set the attribute issuer_uri to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def issuer_uri=(_arg0); end

  # source://saml_idp//lib/saml_idp/response_builder.rb#33
  def raw; end

  # source://saml_idp//lib/saml_idp/signable.rb#12
  def reference_id; end

  # source://saml_idp//lib/saml_idp/signable.rb#12
  def reference_id=(_arg0); end

  # Returns the value of attribute response_id.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def response_id; end

  # Sets the attribute response_id
  #
  # @param value the value to set the attribute response_id to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def response_id=(_arg0); end

  # Returns the value of attribute saml_acs_url.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def saml_acs_url; end

  # Sets the attribute saml_acs_url
  #
  # @param value the value to set the attribute saml_acs_url to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def saml_acs_url=(_arg0); end

  # Returns the value of attribute saml_request_id.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def saml_request_id; end

  # Sets the attribute saml_request_id
  #
  # @param value the value to set the attribute saml_request_id to.
  #
  # source://saml_idp//lib/saml_idp/response_builder.rb#6
  def saml_request_id=(_arg0); end

  # source://saml_idp//lib/saml_idp/signable.rb#14
  def secret_key=(_arg0); end

  # source://saml_idp//lib/saml_idp/response_builder.rb#42
  def signed_and_encoded; end

  # source://saml_idp//lib/saml_idp/signable.rb#13
  def x509_certificate=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/response_builder.rb#46
  def build; end

  # source://saml_idp//lib/saml_idp/response_builder.rb#37
  def encode; end

  # source://saml_idp//lib/saml_idp/response_builder.rb#75
  def now_iso; end

  # source://saml_idp//lib/saml_idp/response_builder.rb#66
  def response_id_string; end

  class << self
    # source://saml_idp//lib/saml_idp/response_builder.rb#71
    def reference_id_method; end
  end
end

# source://saml_idp//lib/saml_idp/saml_response.rb#4
class SamlIdp::SamlResponse
  # @return [SamlResponse] a new instance of SamlResponse
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#11
  def initialize(reference_id, response_id, issuer_uri, principal, audience_uri, saml_request_id, saml_acs_url, algorithm, authn_context_classref, name_id_format, x509_certificate = T.unsafe(nil), secret_key = T.unsafe(nil), expiry = T.unsafe(nil), encryption_opts = T.unsafe(nil)); end

  # Returns the value of attribute algorithm.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def algorithm; end

  # Sets the attribute algorithm
  #
  # @param value the value to set the attribute algorithm to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def algorithm=(_arg0); end

  # Returns the value of attribute assertion_with_signature.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def assertion_with_signature; end

  # Sets the attribute assertion_with_signature
  #
  # @param value the value to set the attribute assertion_with_signature to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def assertion_with_signature=(_arg0); end

  # Returns the value of attribute audience_uri.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def audience_uri; end

  # Sets the attribute audience_uri
  #
  # @param value the value to set the attribute audience_uri to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def audience_uri=(_arg0); end

  # Returns the value of attribute authn_context_classref.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def authn_context_classref; end

  # Sets the attribute authn_context_classref
  #
  # @param value the value to set the attribute authn_context_classref to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def authn_context_classref=(_arg0); end

  # source://saml_idp//lib/saml_idp/saml_response.rb#44
  def build; end

  # Returns the value of attribute encryption_opts.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def encryption_opts; end

  # Sets the attribute encryption_opts
  #
  # @param value the value to set the attribute encryption_opts to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def encryption_opts=(_arg0); end

  # Returns the value of attribute expiry.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def expiry; end

  # Sets the attribute expiry
  #
  # @param value the value to set the attribute expiry to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def expiry=(_arg0); end

  # Returns the value of attribute issuer_uri.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def issuer_uri; end

  # Sets the attribute issuer_uri
  #
  # @param value the value to set the attribute issuer_uri to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def issuer_uri=(_arg0); end

  # Returns the value of attribute name_id_format.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def name_id_format; end

  # Sets the attribute name_id_format
  #
  # @param value the value to set the attribute name_id_format to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def name_id_format=(_arg0); end

  # Returns the value of attribute principal.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def principal; end

  # Sets the attribute principal
  #
  # @param value the value to set the attribute principal to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def principal=(_arg0); end

  # Returns the value of attribute reference_id.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def reference_id; end

  # Sets the attribute reference_id
  #
  # @param value the value to set the attribute reference_id to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def reference_id=(_arg0); end

  # Returns the value of attribute response_id.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def response_id; end

  # Sets the attribute response_id
  #
  # @param value the value to set the attribute response_id to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def response_id=(_arg0); end

  # Returns the value of attribute saml_acs_url.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def saml_acs_url; end

  # Sets the attribute saml_acs_url
  #
  # @param value the value to set the attribute saml_acs_url to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def saml_acs_url=(_arg0); end

  # Returns the value of attribute saml_request_id.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def saml_request_id; end

  # Sets the attribute saml_request_id
  #
  # @param value the value to set the attribute saml_request_id to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def saml_request_id=(_arg0); end

  # Returns the value of attribute secret_key.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def secret_key; end

  # Sets the attribute secret_key
  #
  # @param value the value to set the attribute secret_key to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def secret_key=(_arg0); end

  # source://saml_idp//lib/saml_idp/saml_response.rb#48
  def signed; end

  # Returns the value of attribute x509_certificate.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def x509_certificate; end

  # Sets the attribute x509_certificate
  #
  # @param value the value to set the attribute x509_certificate to.
  #
  # source://saml_idp//lib/saml_idp/saml_response.rb#5
  def x509_certificate=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/saml_response.rb#75
  def assertion_builder; end

  # source://saml_idp//lib/saml_idp/saml_response.rb#61
  def response_builder; end

  # source://saml_idp//lib/saml_idp/saml_response.rb#52
  def signed_assertion; end
end

# source://saml_idp//lib/saml_idp/service_provider.rb#6
class SamlIdp::ServiceProvider
  include ::SamlIdp::Attributeable
  extend ::SamlIdp::Attributeable::ClassMethods

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def acs_url; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def acs_url=(new_value); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def assertion_consumer_logout_service_url; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def assertion_consumer_logout_service_url=(new_value); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def certs; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def certs=(new_value); end

  # source://saml_idp//lib/saml_idp/service_provider.rb#15
  def config(*_arg0, **_arg1, &_arg2); end

  # source://saml_idp//lib/saml_idp/service_provider.rb#48
  def current_metadata; end

  # @param ssl_cert [OpenSSL::X509::Certificate]
  #
  # source://saml_idp//lib/saml_idp/service_provider.rb#30
  def fingerprint_cert(ssl_cert); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def identifier; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def identifier=(new_value); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def metadata_url; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def metadata_url=(new_value); end

  # source://saml_idp//lib/saml_idp/service_provider.rb#39
  def refresh_metadata; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/service_provider.rb#34
  def should_validate_signature?; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/service_provider.rb#17
  def valid?; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/service_provider.rb#21
  def valid_signature?(matching_cert = T.unsafe(nil), require_signature = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/attributeable.rb#19
  def validate_signature; end

  # source://saml_idp//lib/saml_idp/attributeable.rb#20
  def validate_signature=(new_value); end

  private

  # source://saml_idp//lib/saml_idp/service_provider.rb#70
  def fresh_incoming_metadata; end

  # source://saml_idp//lib/saml_idp/service_provider.rb#52
  def get_current_or_build; end

  # source://saml_idp//lib/saml_idp/service_provider.rb#60
  def metadata_getter; end

  # source://saml_idp//lib/saml_idp/service_provider.rb#65
  def metadata_persister; end

  # source://saml_idp//lib/saml_idp/service_provider.rb#75
  def request_metadata; end
end

# source://saml_idp//lib/saml_idp/signable.rb#9
module SamlIdp::Signable
  mixes_in_class_methods ::SamlIdp::Signable::ClassMethods

  # source://saml_idp//lib/saml_idp/signable.rb#25
  def sign(el); end

  # source://saml_idp//lib/saml_idp/signable.rb#17
  def signed; end

  private

  # source://saml_idp//lib/saml_idp/signable.rb#123
  def digest; end

  # source://saml_idp//lib/saml_idp/signable.rb#29
  def generated_reference_id; end

  # source://saml_idp//lib/saml_idp/signable.rb#94
  def get_algorithm; end

  # source://saml_idp//lib/saml_idp/signable.rb#87
  def get_digest; end

  # source://saml_idp//lib/saml_idp/signable.rb#99
  def get_raw; end

  # source://saml_idp//lib/saml_idp/signable.rb#82
  def get_reference_id; end

  # source://saml_idp//lib/saml_idp/signable.rb#118
  def noko_raw; end

  # source://saml_idp//lib/saml_idp/signable.rb#41
  def reference_id_generator; end

  # source://saml_idp//lib/saml_idp/signable.rb#104
  def secret_key; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/signable.rb#64
  def sign?; end

  # source://saml_idp//lib/saml_idp/signable.rb#69
  def signature; end

  # source://saml_idp//lib/saml_idp/signable.rb#74
  def signed_info_builder; end

  # source://saml_idp//lib/saml_idp/signable.rb#46
  def with_signature; end

  # source://saml_idp//lib/saml_idp/signable.rb#55
  def without_signature; end

  # source://saml_idp//lib/saml_idp/signable.rb#109
  def x509_certificate; end

  class << self
    # @private
    #
    # source://saml_idp//lib/saml_idp/signable.rb#10
    def included(base); end
  end
end

# source://saml_idp//lib/saml_idp/signable.rb#136
module SamlIdp::Signable::ClassMethods
  # source://saml_idp//lib/saml_idp/signable.rb#139
  def algorithm_method(new_method_name = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/signable.rb#139
  def digest_method(new_method_name = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/signable.rb#139
  def raw_method(new_method_name = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/signable.rb#139
  def reference_id_method(new_method_name = T.unsafe(nil)); end

  class << self
    # source://saml_idp//lib/saml_idp/signable.rb#137
    def module_method(name, default = T.unsafe(nil)); end
  end
end

# source://saml_idp//lib/saml_idp/signature_builder.rb#3
class SamlIdp::SignatureBuilder
  # @return [SignatureBuilder] a new instance of SignatureBuilder
  #
  # source://saml_idp//lib/saml_idp/signature_builder.rb#6
  def initialize(signed_info_builder, x509_certificate = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/signature_builder.rb#11
  def raw; end

  # Returns the value of attribute signed_info_builder.
  #
  # source://saml_idp//lib/saml_idp/signature_builder.rb#4
  def signed_info_builder; end

  # Sets the attribute signed_info_builder
  #
  # @param value the value to set the attribute signed_info_builder to.
  #
  # source://saml_idp//lib/saml_idp/signature_builder.rb#4
  def signed_info_builder=(_arg0); end

  private

  # source://saml_idp//lib/saml_idp/signature_builder.rb#39
  def signature_value; end

  # source://saml_idp//lib/saml_idp/signature_builder.rb#34
  def signed_info; end

  # source://saml_idp//lib/saml_idp/signature_builder.rb#24
  def x509_certificate; end
end

# source://saml_idp//lib/saml_idp/signed_info_builder.rb#3
class SamlIdp::SignedInfoBuilder
  include ::SamlIdp::Algorithmable

  # @return [SignedInfoBuilder] a new instance of SignedInfoBuilder
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#23
  def initialize(reference_id, digest_value, raw_algorithm, secret_key:); end

  # Returns the value of attribute digest_value.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def digest_value; end

  # Sets the attribute digest_value
  #
  # @param value the value to set the attribute digest_value to.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def digest_value=(_arg0); end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#78
  def password; end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#30
  def raw; end

  # Returns the value of attribute raw_algorithm.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def raw_algorithm; end

  # Sets the attribute raw_algorithm
  #
  # @param value the value to set the attribute raw_algorithm to.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def raw_algorithm=(_arg0); end

  # Returns the value of attribute reference_id.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def reference_id; end

  # Sets the attribute reference_id
  #
  # @param value the value to set the attribute reference_id to.
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#21
  def reference_id=(_arg0); end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#47
  def signed; end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#74
  def using_config_secret_key?; end

  private

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#61
  def clean_algorithm_name; end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#51
  def digest_method; end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#66
  def encoded; end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#82
  def reference_string; end

  # source://saml_idp//lib/saml_idp/signed_info_builder.rb#56
  def signature_method; end
end

# source://saml_idp//lib/saml_idp/signed_info_builder.rb#13
SamlIdp::SignedInfoBuilder::DIGEST_METHODS = T.let(T.unsafe(nil), Hash)

# source://saml_idp//lib/saml_idp/signed_info_builder.rb#6
SamlIdp::SignedInfoBuilder::SIGNATURE_METHODS = T.let(T.unsafe(nil), Hash)

# source://saml_idp//lib/saml_idp/version.rb#2
SamlIdp::VERSION = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/xml_security.rb#31
module SamlIdp::XMLSecurity; end

# source://saml_idp//lib/saml_idp/xml_security.rb#32
class SamlIdp::XMLSecurity::SignedDocument
  # @return [SignedDocument] a new instance of SignedDocument
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#48
  def initialize(response); end

  # Returns the value of attribute document.
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#46
  def document; end

  # Sets the attribute document
  #
  # @param value the value to set the attribute document to.
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#46
  def document=(_arg0); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#85
  def request_cert; end

  # @return [Array(OpenSSL::X509::Certificate, false), Array(nil, Error)] tuple of (cert, error)
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#99
  def valid_cert(cert_text); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#52
  def validate(idp_cert_fingerprint, soft = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#105
  def validate_doc(base64_cert, soft = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#77
  def validate_with_sha256(idp_certificate, options = T.unsafe(nil)); end

  private

  # source://saml_idp//lib/saml_idp/xml_security.rb#299
  def algorithm(element); end

  # matches RubySaml::Utils
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#167
  def build_query(params); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#285
  def canon_algorithm(element); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#326
  def cert_element; end

  # source://saml_idp//lib/saml_idp/xml_security.rb#254
  def digest_method_algorithm(ref); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#281
  def digests_match?(hash, digest_value); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#320
  def extract_inclusive_namespaces; end

  # source://saml_idp//lib/saml_idp/xml_security.rb#138
  def find_base64_cert(options); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#129
  def fingerprint_cert(cert, options); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#134
  def fingerprint_cert_sha1(cert); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#330
  def log(msg, level: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#162
  def request?; end

  # source://saml_idp//lib/saml_idp/xml_security.rb#118
  def signature_algorithm(options); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#196
  def validate_doc_embedded_signature(base64_cert, soft = T.unsafe(nil)); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#175
  def validate_doc_params_signature(base64_cert, soft = T.unsafe(nil), params); end

  # source://saml_idp//lib/saml_idp/xml_security.rb#258
  def verify_signature(base64_cert, sig_alg, signature, canon_string, soft); end
end

# source://saml_idp//lib/saml_idp/xml_security.rb#42
SamlIdp::XMLSecurity::SignedDocument::C14N = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/xml_security.rb#43
SamlIdp::XMLSecurity::SignedDocument::DSIG = T.let(T.unsafe(nil), String)

# source://saml_idp//lib/saml_idp/xml_security.rb#44
SamlIdp::XMLSecurity::SignedDocument::DS_NS = T.let(T.unsafe(nil), Hash)

# source://saml_idp//lib/saml_idp/xml_security.rb#33
class SamlIdp::XMLSecurity::SignedDocument::ValidationError < ::StandardError
  # @return [ValidationError] a new instance of ValidationError
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#36
  def initialize(msg = T.unsafe(nil), error_code = T.unsafe(nil)); end

  # Returns the value of attribute error_code.
  #
  # source://saml_idp//lib/saml_idp/xml_security.rb#34
  def error_code; end
end
