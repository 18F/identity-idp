# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `awrence` gem.
# Please instead update this file by running `bin/tapioca gem awrence`.


# source://awrence//lib/awrence/ext/array/to_camel_keys.rb#3
class Array
  include ::Enumerable
  include ::Awrence::Methods
end

# source://awrence//lib/awrence/methods.rb#3
module Awrence
  class << self
    # source://awrence//lib/awrence.rb#11
    def acronyms; end

    # Sets the attribute acronyms
    #
    # @param value the value to set the attribute acronyms to.
    #
    # source://awrence//lib/awrence.rb#9
    def acronyms=(_arg0); end
  end
end

# source://awrence//lib/awrence/methods.rb#4
module Awrence::Methods
  # Recursively converts Rubyish snake_case hash keys to CamelCase JSON-style
  # hash keys suitable for use with a JSON API.
  #
  # source://awrence//lib/awrence/methods.rb#15
  def to_camel_keys(value = T.unsafe(nil)); end

  # Recursively converts Rubyish snake_case hash keys to camelBack JSON-style
  # hash keys suitable for use with a JSON API.
  #
  # source://awrence//lib/awrence/methods.rb#8
  def to_camelback_keys(value = T.unsafe(nil)); end

  private

  # source://awrence//lib/awrence/methods.rb#32
  def camelize(snake_word, first_upper: T.unsafe(nil)); end

  # source://awrence//lib/awrence/methods.rb#21
  def camelize_key(key, first_upper: T.unsafe(nil)); end

  # source://awrence//lib/awrence/methods.rb#44
  def gsubbed(str, pattern, extra = T.unsafe(nil)); end

  # source://awrence//lib/awrence/methods.rb#50
  def process_value(method, value, first_upper: T.unsafe(nil)); end
end

# source://awrence//lib/awrence/ext/hash/to_camel_keys.rb#3
class Hash
  include ::Enumerable
  include ::Awrence::Methods
end
