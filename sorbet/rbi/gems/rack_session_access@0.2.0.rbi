# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rack_session_access` gem.
# Please instead update this file by running `bin/tapioca gem rack_session_access`.


# source://rack_session_access//lib/rack_session_access.rb#1
module RackSessionAccess
  class << self
    # @yield [_self]
    # @yieldparam _self [RackSessionAccess] the object that the method was called on
    #
    # source://rack_session_access//lib/rack_session_access.rb#21
    def configure; end

    # decode string to session hash
    #
    # source://rack_session_access//lib/rack_session_access.rb#17
    def decode(string); end

    # session resource edit path
    #
    # source://rack_session_access//lib/rack_session_access.rb#9
    def edit_path; end

    # session resource edit path
    #
    # source://rack_session_access//lib/rack_session_access.rb#9
    def edit_path=(_arg0); end

    # encode session hash to string
    #
    # source://rack_session_access//lib/rack_session_access.rb#12
    def encode(hash); end

    # session resource path
    #
    # source://rack_session_access//lib/rack_session_access.rb#6
    def path; end

    # session resource path
    #
    # source://rack_session_access//lib/rack_session_access.rb#6
    def path=(_arg0); end
  end
end

# source://rack_session_access//lib/rack_session_access/middleware.rb#5
class RackSessionAccess::Middleware
  # Initialize RackSessionAccess middleware
  #
  # Options:
  # * :key - rack session key
  #
  # @param app a rack application
  # @param options
  # @return [Middleware] a new instance of Middleware
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#13
  def initialize(app, options = T.unsafe(nil)); end

  # source://rack_session_access//lib/rack_session_access/middleware.rb#23
  def call(env); end

  protected

  # Render form for submit new session data
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#69
  def edit(request); end

  # List session data
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#40
  def show(request); end

  # Update session data
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#88
  def update(request); end

  private

  # @return path for given action name
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#120
  def action_path(action); end

  # Dispatch action from request
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#105
  def dispatch_action(request); end

  # @return redirect response to specified url
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#125
  def redirect_to(url); end

  # @return html response
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#132
  def render(code = T.unsafe(nil), headers = T.unsafe(nil)); end

  # Return HTTP method, detect emulated method with _method param
  #
  # source://rack_session_access//lib/rack_session_access/middleware.rb#113
  def request_method(request); end
end
