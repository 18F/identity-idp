# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `redacted_struct` gem.
# Please instead update this file by running `bin/tapioca gem redacted_struct`.


# A module that adds redacted functionality to a class
#
# source://redacted_struct//lib/redactable.rb#4
module Redactable
  # source://redacted_struct//lib/redactable.rb#26
  def allowed_members; end

  # source://redacted_struct//lib/redactable.rb#55
  def base_name_for_inspection; end

  # source://redacted_struct//lib/redactable.rb#63
  def base_type_for_pp; end

  # source://redacted_struct//lib/redactable.rb#11
  def inspect; end

  # Overrides for pp
  # See https://github.com/ruby/pp/blob/3d925b5688b8226f653127d990a8dce48bced5fe/lib/pp.rb#L379-L391
  #
  # source://redacted_struct//lib/redactable.rb#33
  def pretty_print(q); end

  # source://redacted_struct//lib/redactable.rb#11
  def to_s; end

  class << self
    # @private
    #
    # source://redacted_struct//lib/redactable.rb#5
    def included(mod); end
  end
end

# A subclass of Data that redacts members by default, and can allow some to be printed
#
# source://redacted_struct//lib/redacted_data.rb#6
class RedactedData < ::Data
  include ::Redactable

  class << self
    # source://redacted_struct//lib/redactable.rb#7
    def allowed_members; end

    # source://redacted_struct//lib/redacted_data.rb#9
    def define(*members, allowed_members: T.unsafe(nil), &block); end
  end
end

# A subclass of Struct that redacts members by default, and can allow some to be printed
#
# source://redacted_struct//lib/redacted_struct.rb#7
class RedactedStruct < ::Struct
  include ::Redactable

  class << self
    # source://redacted_struct//lib/redactable.rb#7
    def allowed_members; end

    # source://redacted_struct//lib/redacted_struct.rb#12
    def new(*name_and_members, keyword_init: T.unsafe(nil), allowed_members: T.unsafe(nil), &block); end
  end
end

# source://redacted_struct//lib/redacted_struct.rb#10
RedactedStruct::VERSION = T.let(T.unsafe(nil), String)
