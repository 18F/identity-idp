# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `xmlenc` gem.
# Please instead update this file by running `bin/tapioca gem xmlenc`.


# source://xmlenc//lib/xmlenc/version.rb#1
module Xmlenc; end

# source://xmlenc//lib/xmlenc.rb#36
module Xmlenc::Algorithms; end

# source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#3
class Xmlenc::Algorithms::AESCBC
  # @return [AESCBC] a new instance of AESCBC
  #
  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#10
  def initialize(size); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#21
  def decrypt(cipher_value, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#32
  def encrypt(data, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#39
  def key; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#14
  def setup(key = T.unsafe(nil)); end

  private

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#53
  def cipher; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#45
  def iv; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#49
  def iv_len; end

  class << self
    # source://xmlenc//lib/xmlenc/algorithms/aes_cbc.rb#5
    def [](size); end
  end
end

# source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#3
class Xmlenc::Algorithms::AESGCM
  # @return [AESGCM] a new instance of AESGCM
  #
  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#12
  def initialize(size); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#23
  def decrypt(cipher_value, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#32
  def encrypt(data, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#40
  def key; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#16
  def setup(key = T.unsafe(nil)); end

  private

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#54
  def cipher; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#46
  def iv; end

  # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#50
  def iv_len; end

  class << self
    # source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#7
    def [](size); end
  end
end

# source://xmlenc//lib/xmlenc/algorithms/aes_gcm.rb#4
Xmlenc::Algorithms::AESGCM::AUTH_TAG_LEN = T.let(T.unsafe(nil), Integer)

# source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#3
class Xmlenc::Algorithms::DES3CBC
  # @return [DES3CBC] a new instance of DES3CBC
  #
  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#8
  def initialize(key = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#12
  def decrypt(cipher_value, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#19
  def encrypt(data, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#26
  def key; end

  private

  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#36
  def cipher; end

  # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#32
  def iv_len; end

  class << self
    # source://xmlenc//lib/xmlenc/algorithms/des3_cbc.rb#4
    def setup(key); end
  end
end

# source://xmlenc//lib/xmlenc/algorithms/rsa_15.rb#3
class Xmlenc::Algorithms::RSA15
  # @return [RSA15] a new instance of RSA15
  #
  # source://xmlenc//lib/xmlenc/algorithms/rsa_15.rb#4
  def initialize(key); end

  # source://xmlenc//lib/xmlenc/algorithms/rsa_15.rb#8
  def decrypt(cipher_value, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/rsa_15.rb#12
  def encrypt(data, option = T.unsafe(nil)); end
end

# source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#3
class Xmlenc::Algorithms::RsaOaepMgf1p
  # @return [RsaOaepMgf1p] a new instance of RsaOaepMgf1p
  #
  # source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#6
  def initialize(key); end

  # source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#10
  def decrypt(cipher_value, options = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#15
  def encrypt(data, options = T.unsafe(nil)); end

  private

  # source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#21
  def verify_algorithm(node); end
end

# source://xmlenc//lib/xmlenc/algorithms/rsa_oaep_mgf1p.rb#4
Xmlenc::Algorithms::RsaOaepMgf1p::DIGEST_METHODS = T.let(T.unsafe(nil), Array)

# source://xmlenc//lib/xmlenc.rb#19
module Xmlenc::Builder; end

# source://xmlenc//lib/xmlenc/builder/base.rb#5
module Xmlenc::Builder::Base
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::XmlMapper
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::XmlMapper::ClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::Xmlenc::Builder::Base::XmlMapperClassMethods

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _validators; end
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/base.rb#32
module Xmlenc::Builder::Base::XmlMapperClassMethods
  # source://xmlenc//lib/xmlenc/builder/base.rb#33
  def parse(xml, options = T.unsafe(nil)); end
end

# source://xmlenc//lib/xmlenc/builder/base.rb#16
module Xmlenc::Builder::Base::XmlMapperInstanceMethods
  # source://xmlenc//lib/xmlenc/builder/base.rb#17
  def initialize(attributes = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/builder/base.rb#23
  def from_xml=(bool); end

  # @return [Boolean]
  #
  # source://xmlenc//lib/xmlenc/builder/base.rb#27
  def from_xml?; end
end

# source://xmlenc//lib/xmlenc/builder/cipher_data.rb#3
class Xmlenc::Builder::CipherData
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_value; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_value=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc.rb#31
module Xmlenc::Builder::ComplexTypes; end

# source://xmlenc//lib/xmlenc/builder/complex_types/encrypted_type.rb#4
module Xmlenc::Builder::ComplexTypes::EncryptedType
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::XmlMapper
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  include ::Xmlenc::Builder::Base

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::XmlMapper::ClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://xmlenc//lib/xmlenc/builder/complex_types/encrypted_type.rb#18
  def initialize(attributes = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/builder/complex_types/encrypted_type.rb#23
  def set_encryption_method(attributes = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/builder/complex_types/encrypted_type.rb#27
  def set_key_name(key_name); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _validators; end
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/data_reference.rb#3
class Xmlenc::Builder::DataReference
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def uri; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def uri=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/digest_method.rb#3
class Xmlenc::Builder::DigestMethod
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def algorithm; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def algorithm=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#3
class Xmlenc::Builder::EncryptedData
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  include ::Xmlenc::Builder::ComplexTypes::EncryptedType
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # @return [EncryptedData] a new instance of EncryptedData
  #
  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#29
  def initialize(*args); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_data; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_data=(_arg0); end

  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#39
  def encrypt(data, key_options = T.unsafe(nil)); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encryption_method; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encryption_method=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def id; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def id=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_info; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_info=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#63
  def set_key_name(key_name); end

  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#56
  def set_key_retrieval_method(retrieval_method); end

  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#25
  def type; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def type=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#72
  def algorithm; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#6
Xmlenc::Builder::EncryptedData::ALGORITHMS = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc/builder/encrypted_data.rb#14
Xmlenc::Builder::EncryptedData::TYPES = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#3
class Xmlenc::Builder::EncryptedKey
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  include ::Xmlenc::Builder::ComplexTypes::EncryptedType
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # @return [EncryptedKey] a new instance of EncryptedKey
  #
  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#34
  def initialize(*args); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#29
  def add_data_reference(data_id); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def carried_key_name; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def carried_key_name=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_data; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def cipher_data=(_arg0); end

  # Returns the value of attribute data.
  #
  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#21
  def data; end

  # Sets the attribute data
  #
  # @param value the value to set the attribute data to.
  #
  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#21
  def data=(_arg0); end

  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#23
  def encrypt(key, data = T.unsafe(nil)); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encryption_method; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encryption_method=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def id; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def id=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_info; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_info=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def recipient; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def recipient=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def reference_list; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def reference_list=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#43
  def algorithm; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/encrypted_key.rb#6
Xmlenc::Builder::EncryptedKey::ALGORITHMS = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc/builder/encryption_method.rb#3
class Xmlenc::Builder::EncryptionMethod
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # @return [EncryptionMethod] a new instance of EncryptionMethod
  #
  # source://xmlenc//lib/xmlenc/builder/encryption_method.rb#16
  def initialize(attributes = T.unsafe(nil)); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def algorithm; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def algorithm=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def digest_method; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def digest_method=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/key_info.rb#3
class Xmlenc::Builder::KeyInfo
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encrypted_key; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def encrypted_key=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_name; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def key_name=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def retrieval_method; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def retrieval_method=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/reference_list.rb#3
class Xmlenc::Builder::ReferenceList
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://xmlenc//lib/xmlenc/builder/reference_list.rb#13
  def add_data_reference(data_id); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def data_references; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#113
  def data_references=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/builder/retrieval_method.rb#3
class Xmlenc::Builder::RetrievalMethod
  include ::Xmlenc::Builder::Base
  include ::XmlMapper
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::Xmlenc::Builder::Base::XmlMapperInstanceMethods
  extend ::XmlMapper::ClassMethods
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::Ahoy::Model
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::Xmlenc::Builder::Base::XmlMapperClassMethods

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators; end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
  def _validators?; end

  # source://activemodel/7.2.1.1/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://xmlenc//lib/xmlenc/builder/retrieval_method.rb#14
  def type; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def type=(_arg0); end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def uri; end

  # source://xmlmapper/0.8.1/lib/xmlmapper.rb#58
  def uri=(_arg0); end

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context; end

  private

  # source://activemodel/7.2.1.1/lib/active_model/validations.rb#67
  def validation_context=(_arg0); end

  class << self
    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/7.2.1.1/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators; end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators=(value); end

    # source://activemodel/7.2.1.1/lib/active_model/validations.rb#71
    def _validators?; end
  end
end

# source://xmlenc//lib/xmlenc/encrypted_data.rb#2
class Xmlenc::EncryptedData
  # @return [EncryptedData] a new instance of EncryptedData
  #
  # source://xmlenc//lib/xmlenc/encrypted_data.rb#19
  def initialize(node); end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#31
  def cipher_value; end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#35
  def cipher_value=(value); end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#39
  def decrypt(key); end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#23
  def document; end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#46
  def encrypt(data); end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#27
  def encryption_method; end

  # Returns the value of attribute node.
  #
  # source://xmlenc//lib/xmlenc/encrypted_data.rb#17
  def node; end

  # Sets the attribute node
  #
  # @param value the value to set the attribute node to.
  #
  # source://xmlenc//lib/xmlenc/encrypted_data.rb#17
  def node=(_arg0); end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#53
  def type; end

  private

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#63
  def algorithm; end

  # source://xmlenc//lib/xmlenc/encrypted_data.rb#59
  def at_xpath(xpath); end
end

# source://xmlenc//lib/xmlenc/encrypted_data.rb#3
Xmlenc::EncryptedData::ALGORITHMS = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc/encrypted_data.rb#12
Xmlenc::EncryptedData::TYPES = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc.rb#17
class Xmlenc::EncryptedDataNotFound < ::Xmlenc::Error; end

# source://xmlenc//lib/xmlenc/encrypted_document.rb#2
class Xmlenc::EncryptedDocument
  # @return [EncryptedDocument] a new instance of EncryptedDocument
  #
  # source://xmlenc//lib/xmlenc/encrypted_document.rb#5
  def initialize(xml); end

  # source://xmlenc//lib/xmlenc/encrypted_document.rb#17
  def decrypt(key, fail_silent = T.unsafe(nil)); end

  # source://xmlenc//lib/xmlenc/encrypted_document.rb#9
  def document; end

  # source://xmlenc//lib/xmlenc/encrypted_document.rb#13
  def encrypted_keys; end

  # Returns the value of attribute xml.
  #
  # source://xmlenc//lib/xmlenc/encrypted_document.rb#3
  def xml; end

  # Sets the attribute xml
  #
  # @param value the value to set the attribute xml to.
  #
  # source://xmlenc//lib/xmlenc/encrypted_document.rb#3
  def xml=(_arg0); end
end

# source://xmlenc//lib/xmlenc/encrypted_key.rb#2
class Xmlenc::EncryptedKey
  # @return [EncryptedKey] a new instance of EncryptedKey
  #
  # source://xmlenc//lib/xmlenc/encrypted_key.rb#8
  def initialize(node); end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#24
  def cipher_value; end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#28
  def cipher_value=(value); end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#32
  def decrypt(key); end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#12
  def document; end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#37
  def encrypt(key, data); end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#20
  def encrypted_data; end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#16
  def encryption_method; end

  private

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#67
  def algorithm; end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#63
  def at_xpath(xpath); end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#55
  def reference_uri; end

  # source://xmlenc//lib/xmlenc/encrypted_key.rb#45
  def referenced_node; end
end

# source://xmlenc//lib/xmlenc/encrypted_key.rb#3
Xmlenc::EncryptedKey::ALGORITHMS = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc.rb#14
class Xmlenc::Error < ::StandardError; end

# source://xmlenc//lib/xmlenc.rb#9
Xmlenc::NAMESPACES = T.let(T.unsafe(nil), Hash)

# source://xmlenc//lib/xmlenc.rb#16
class Xmlenc::UnparseableMessage < ::Xmlenc::Error; end

# source://xmlenc//lib/xmlenc.rb#15
class Xmlenc::UnsupportedError < ::Xmlenc::Error; end

# source://xmlenc//lib/xmlenc/version.rb#2
Xmlenc::VERSION = T.let(T.unsafe(nil), String)
