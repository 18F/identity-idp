# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rails-controller-testing` gem.
# Please instead update this file by running `bin/tapioca gem rails-controller-testing`.


# source://rails-controller-testing//lib/rails/controller/testing/test_process.rb#3
module Rails
  class << self
    # source://railties/7.2.1.1/lib/rails.rb#44
    def app_class; end

    # source://railties/7.2.1.1/lib/rails.rb#44
    def app_class=(_arg0); end

    # source://railties/7.2.1.1/lib/rails.rb#45
    def application; end

    # source://railties/7.2.1.1/lib/rails.rb#43
    def application=(_arg0); end

    # source://railties/7.2.1.1/lib/rails.rb#126
    def autoloaders; end

    # source://railties/7.2.1.1/lib/rails.rb#56
    def backtrace_cleaner; end

    # source://railties/7.2.1.1/lib/rails.rb#44
    def cache; end

    # source://railties/7.2.1.1/lib/rails.rb#44
    def cache=(_arg0); end

    # source://railties/7.2.1.1/lib/rails.rb#52
    def configuration; end

    # source://railties/7.2.1.1/lib/rails/deprecator.rb#4
    def deprecator; end

    # source://railties/7.2.1.1/lib/rails.rb#75
    def env; end

    # source://railties/7.2.1.1/lib/rails.rb#82
    def env=(environment); end

    # source://railties/7.2.1.1/lib/rails.rb#93
    def error; end

    # source://railties/7.2.1.1/lib/rails/gem_version.rb#5
    def gem_version; end

    # source://railties/7.2.1.1/lib/rails.rb#106
    def groups(*groups); end

    # source://railties/7.2.1.1/lib/rails.rb#49
    def initialize!(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.2.1.1/lib/rails.rb#49
    def initialized?(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.2.1.1/lib/rails.rb#44
    def logger; end

    # source://railties/7.2.1.1/lib/rails.rb#44
    def logger=(_arg0); end

    # source://railties/7.2.1.1/lib/rails.rb#122
    def public_path; end

    # source://railties/7.2.1.1/lib/rails.rb#65
    def root; end

    # source://railties/7.2.1.1/lib/rails/version.rb#7
    def version; end
  end
end

# source://rails-controller-testing//lib/rails/controller/testing/test_process.rb#4
module Rails::Controller; end

# source://rails-controller-testing//lib/rails/controller/testing/test_process.rb#5
module Rails::Controller::Testing
  class << self
    # source://rails-controller-testing//lib/rails/controller/testing.rb#9
    def install; end
  end
end

# source://rails-controller-testing//lib/rails/controller/testing/integration.rb#6
module Rails::Controller::Testing::Integration
  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def delete(*args, **kwargs); end

  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def get(*args, **kwargs); end

  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def head(*args, **kwargs); end

  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def patch(*args, **kwargs); end

  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def post(*args, **kwargs); end

  # source://rails-controller-testing//lib/rails/controller/testing/integration.rb#14
  def put(*args, **kwargs); end
end

# source://rails-controller-testing//lib/rails/controller/testing/railtie.rb#1
class Rails::Controller::Testing::Railtie < ::Rails::Railtie; end

# source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#6
module Rails::Controller::Testing::TemplateAssertions
  extend ::ActiveSupport::Concern

  # Asserts that the request was rendered with the appropriate template file or partials.
  #
  #   # assert that the "new" view template was rendered
  #   assert_template "new"
  #
  #   # assert that the exact template "admin/posts/new" was rendered
  #   assert_template %r{\Aadmin/posts/new\Z}
  #
  #   # assert that the layout 'admin' was rendered
  #   assert_template layout: 'admin'
  #   assert_template layout: 'layouts/admin'
  #   assert_template layout: :admin
  #
  #   # assert that no layout was rendered
  #   assert_template layout: nil
  #   assert_template layout: false
  #
  #   # assert that the "_customer" partial was rendered twice
  #   assert_template partial: '_customer', count: 2
  #
  #   # assert that no partials were rendered
  #   assert_template partial: false
  #
  #   # assert that a file was rendered
  #   assert_template file: "README.rdoc"
  #
  #   # assert that no file was rendered
  #   assert_template file: nil
  #   assert_template file: false
  #
  # In a view test case, you can also assert that specific locals are passed
  # to partials:
  #
  #   # assert that the "_customer" partial was rendered with a specific object
  #   assert_template partial: '_customer', locals: { customer: @customer }
  #
  # source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#109
  def assert_template(options = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#60
  def process(*_arg0, **_arg1); end

  # source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#65
  def reset_template_assertion; end

  # source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#16
  def setup_subscriptions; end

  # source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#53
  def teardown_subscriptions; end
end

# source://rails-controller-testing//lib/rails/controller/testing/template_assertions.rb#14
Rails::Controller::Testing::TemplateAssertions::RENDER_TEMPLATE_INSTANCE_VARIABLES = T.let(T.unsafe(nil), Array)

# source://rails-controller-testing//lib/rails/controller/testing/test_process.rb#6
module Rails::Controller::Testing::TestProcess
  # source://rails-controller-testing//lib/rails/controller/testing/test_process.rb#7
  def assigns(key = T.unsafe(nil)); end
end

# source://rails-controller-testing//lib/rails/controller/testing/version.rb#4
Rails::Controller::Testing::VERSION = T.let(T.unsafe(nil), String)
