# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `premailer-rails` gem.
# Please instead update this file by running `bin/tapioca gem premailer-rails`.


# source://premailer-rails//lib/premailer/rails/version.rb#1
class Premailer
  # source://premailer/1.27.0/lib/premailer/premailer.rb#184
  def initialize(html, options = T.unsafe(nil)); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#358
  def append_query_string(doc, queries); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#120
  def base_dir; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#116
  def base_url; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#511
  def check_client_support; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#425
  def convert_inline_links(doc, base_uri); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#129
  def doc; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#113
  def html_file; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#410
  def is_xhtml?; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#344
  def local_uri?(uri); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#352
  def media_type_ok?(media_types); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#126
  def processed_doc; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#123
  def unmergable_rules; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#259
  def warnings; end

  protected

  # source://premailer/1.27.0/lib/premailer/premailer.rb#300
  def load_css_from_html!; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#266
  def load_css_from_local_file!(path); end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#287
  def load_css_from_options!; end

  # source://premailer/1.27.0/lib/premailer/premailer.rb#282
  def load_css_from_string(css_string); end

  class << self
    # source://premailer/1.27.0/lib/premailer/premailer.rb#504
    def canonicalize(uri); end

    # source://premailer/1.27.0/lib/premailer/premailer.rb#471
    def is_media_query?(media_types); end

    # source://premailer/1.27.0/lib/premailer/premailer.rb#498
    def local_data?(data); end

    # source://premailer/1.27.0/lib/premailer/premailer.rb#476
    def resolve_link(path, base_path); end
  end
end

# source://premailer-rails//lib/premailer/rails/version.rb#2
module Premailer::Rails
  class << self
    # Returns the value of attribute config.
    #
    # source://premailer-rails//lib/premailer/rails.rb#18
    def config; end

    # Sets the attribute config
    #
    # @param value the value to set the attribute config to.
    #
    # source://premailer-rails//lib/premailer/rails.rb#18
    def config=(_arg0); end

    # source://premailer-rails//lib/premailer/rails.rb#21
    def register_interceptors; end
  end
end

# source://premailer-rails//lib/premailer/rails/css_helper.rb#3
module Premailer::Rails::CSSHelper
  extend ::Premailer::Rails::CSSHelper

  # Returns the value of attribute cache.
  #
  # source://premailer-rails//lib/premailer/rails/css_helper.rb#8
  def cache; end

  # Sets the attribute cache
  #
  # @param value the value to set the attribute cache to.
  #
  # source://premailer-rails//lib/premailer/rails/css_helper.rb#8
  def cache=(_arg0); end

  # Returns all linked CSS files concatenated as string.
  #
  # source://premailer-rails//lib/premailer/rails/css_helper.rb#12
  def css_for_doc(doc); end

  # source://premailer-rails//lib/premailer/rails/css_helper.rb#16
  def css_for_url(url); end

  private

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/css_helper.rb#41
  def cache_enabled?; end

  # source://premailer-rails//lib/premailer/rails/css_helper.rb#26
  def css_urls_in_doc(doc); end

  # source://premailer-rails//lib/premailer/rails/css_helper.rb#54
  def find_strategy(key); end

  # @raise [FileNotFound]
  #
  # source://premailer-rails//lib/premailer/rails/css_helper.rb#45
  def load_css(url); end

  # source://premailer-rails//lib/premailer/rails/css_helper.rb#37
  def load_css_with_cache(url); end
end

# source://premailer-rails//lib/premailer/rails/css_helper.rb#6
class Premailer::Rails::CSSHelper::FileNotFound < ::StandardError; end

# source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#3
module Premailer::Rails::CSSLoaders; end

# source://premailer-rails//lib/premailer/rails/css_loaders/asset_pipeline_loader.rb#4
module Premailer::Rails::CSSLoaders::AssetPipelineLoader
  extend ::Premailer::Rails::CSSLoaders::AssetPipelineLoader

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/css_loaders/asset_pipeline_loader.rb#26
  def asset_pipeline_present?; end

  # source://premailer-rails//lib/premailer/rails/css_loaders/asset_pipeline_loader.rb#15
  def file_name(url); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/asset_pipeline_loader.rb#7
  def load(url); end
end

# source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#4
module Premailer::Rails::CSSLoaders::FileSystemLoader
  extend ::Premailer::Rails::CSSLoaders::FileSystemLoader

  # source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#20
  def asset_filename(filename); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#12
  def file_name(url); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#7
  def load(url); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/file_system_loader.rb#28
  def relative_url_root; end
end

# source://premailer-rails//lib/premailer/rails/css_loaders/network_loader.rb#4
module Premailer::Rails::CSSLoaders::NetworkLoader
  extend ::Premailer::Rails::CSSLoaders::NetworkLoader

  # source://premailer-rails//lib/premailer/rails/css_loaders/network_loader.rb#32
  def asset_host(url); end

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/css_loaders/network_loader.rb#27
  def asset_host_present?; end

  # source://premailer-rails//lib/premailer/rails/css_loaders/network_loader.rb#7
  def load(url); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/network_loader.rb#12
  def uri_for_url(url); end
end

# source://premailer-rails//lib/premailer/rails/css_loaders/propshaft_loader.rb#4
module Premailer::Rails::CSSLoaders::PropshaftLoader
  extend ::Premailer::Rails::CSSLoaders::PropshaftLoader

  # source://premailer-rails//lib/premailer/rails/css_loaders/propshaft_loader.rb#16
  def file_name(url); end

  # source://premailer-rails//lib/premailer/rails/css_loaders/propshaft_loader.rb#7
  def load(url); end

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/css_loaders/propshaft_loader.rb#32
  def propshaft_present?; end
end

# source://premailer-rails//lib/premailer/rails/customized_premailer.rb#3
class Premailer::Rails::CustomizedPremailer < ::Premailer
  # @return [CustomizedPremailer] a new instance of CustomizedPremailer
  #
  # source://premailer-rails//lib/premailer/rails/customized_premailer.rb#4
  def initialize(html); end
end

# source://premailer-rails//lib/premailer/rails/hook.rb#3
class Premailer::Rails::Hook
  # @return [Hook] a new instance of Hook
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#16
  def initialize(message); end

  # Returns the value of attribute message.
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#4
  def message; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#20
  def perform; end

  private

  # source://premailer-rails//lib/premailer/rails/hook.rb#60
  def generate_alternative_part; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#68
  def generate_html_part; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#48
  def generate_html_part_replacement; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#81
  def generate_text_part; end

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#56
  def generate_text_part?; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#96
  def html_part; end

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#38
  def message_contains_html?; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#92
  def premailer; end

  # Returns true if the message itself has a content type of text/html, thus
  # it does not contain other parts such as alternatives and attachments.
  #
  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#44
  def pure_html_message?; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#34
  def remove_skip_premailer_header; end

  # source://premailer-rails//lib/premailer/rails/hook.rb#104
  def replace_html_part(new_part); end

  # If the new part is a pure text/html part, the body and its content type
  # are used for the message. If the new part is
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#114
  def replace_in_pure_html_message(new_part); end

  # source://premailer-rails//lib/premailer/rails/hook.rb#127
  def replace_part_in_list(parts_list, old_part, new_part); end

  # @return [Boolean]
  #
  # source://premailer-rails//lib/premailer/rails/hook.rb#30
  def skip_premailer_header_present?; end

  class << self
    # source://premailer-rails//lib/premailer/rails/hook.rb#7
    def delivering_email(message); end

    # source://premailer-rails//lib/premailer/rails/hook.rb#7
    def perform(message); end

    # source://premailer-rails//lib/premailer/rails/hook.rb#7
    def previewing_email(message); end
  end
end

# source://premailer-rails//lib/premailer/rails/railtie.rb#3
class Premailer::Rails::Railtie < ::Rails::Railtie; end

# source://premailer-rails//lib/premailer/rails/version.rb#3
Premailer::Rails::VERSION = T.let(T.unsafe(nil), String)
