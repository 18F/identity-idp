# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `request_store` gem.
# Please instead update this file by running `bin/tapioca gem request_store`.


# A middleware that ensures the RequestStore stays around until
# the last part of the body is rendered. This is useful when
# using streaming.
#
# Uses Rack::BodyProxy, adapted from Rack::Lock's usage of the
# same pattern.
#
# source://request_store//lib/request_store/version.rb#1
module RequestStore
  class << self
    # source://request_store//lib/request_store.rb#34
    def [](key); end

    # source://request_store//lib/request_store.rb#42
    def []=(key, value); end

    # @return [Boolean]
    #
    # source://request_store//lib/request_store.rb#26
    def active?; end

    # source://request_store//lib/request_store.rb#18
    def begin!; end

    # source://request_store//lib/request_store.rb#14
    def clear!; end

    # source://request_store//lib/request_store.rb#55
    def delete(key, &block); end

    # source://request_store//lib/request_store.rb#22
    def end!; end

    # @return [Boolean]
    #
    # source://request_store//lib/request_store.rb#46
    def exist?(key); end

    # source://request_store//lib/request_store.rb#50
    def fetch(key); end

    # source://request_store//lib/request_store.rb#30
    def read(key); end

    # source://request_store//lib/request_store.rb#6
    def store; end

    # source://request_store//lib/request_store.rb#10
    def store=(store); end

    # source://request_store//lib/request_store.rb#38
    def write(key, value); end
  end
end

# source://request_store//lib/request_store/middleware.rb#11
class RequestStore::Middleware
  # @return [Middleware] a new instance of Middleware
  #
  # source://request_store//lib/request_store/middleware.rb#12
  def initialize(app); end

  # source://request_store//lib/request_store/middleware.rb#16
  def call(env); end
end

# source://request_store//lib/request_store/railtie.rb#2
class RequestStore::Railtie < ::Rails::Railtie; end

# source://request_store//lib/request_store/version.rb#2
RequestStore::VERSION = T.let(T.unsafe(nil), String)
