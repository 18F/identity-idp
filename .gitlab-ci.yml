# When adding a new job, you'll want to add `extends: .on_push` to ignore
# scheduled executions, unless you're specifically adding something that should
# be run periodically, like metric exporters or syncs.

default:
  image: mitchh/ruby-node-yarn-chrome-chromedriver:3.0.3

variables:
  GITLAB_CI: 'true'

.bundle_install: &bundle_install
  - bundle check || bundle install --deployment --jobs=4 --retry=3 --without deploy development doc production --path vendor/ruby

.yarn_install: &yarn_install
  - yarn install --frozen-lockfile --ignore-engines --cache-folder .yarn-cache

.yarn_production_install: &yarn_production_install
  - yarn install --production --frozen-lockfile --ignore-engines --cache-folder .yarn-cache

cache:
  - &ruby_cache
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/ruby
    policy: pull

  - &yarn_cache
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/
    policy: pull

  - &yarn_production_cache
    key:
      files:
        - yarn.lock
    paths:
      - .yarn-cache/
    policy: pull

  - &assets_cache
    key: $CI_COMMIT_SHA
    paths:
      - tmp/cache/assets
      - public/assets
      - public/packs
    policy: pull

stages:
  - build
  - test
  - after_test

.on_push:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

check_changelog:
  extends: .on_push
  stage: build
  script:
    - |
      if [ "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "main" ]
      then
        echo "Skipping because this is not a PR or is not targeting main"
        exit 0
      else
        git fetch origin --quiet
        ./scripts/changelog-check -b origin/"${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" -s origin/"${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
      fi
install:
  extends: .on_push
  stage: build
  variables:
    RAILS_ENV: test
  cache:
    - <<: *ruby_cache
      policy: pull-push
    - <<: *yarn_cache
      policy: pull-push
    - <<: *assets_cache
      policy: push

  script:
    - *bundle_install
    - *yarn_install
    - bundle exec rake assets:precompile

specs:
  extends: .on_push
  stage: test
  parallel: 5
  cache:
    - <<: *ruby_cache
    - <<: *yarn_cache
    - <<: *assets_cache
  variables:
    AWS_ACCESS_KEY_ID: test
    AWS_DEFAULT_REGION: us-west-2
    AWS_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY: test
    CAPYBARA_WAIT_TIME_SECONDS: 5
    COVERAGE: 'true'
    DOCKER_DB_HOST: postgres
    POSTGRES_DB: upaya_test
    POSTGRES_USER: postgres_user
    POSTGRES_PASSWORD: postgres_password
    POSTGRES_HOST_AUTH_METHOD: trust
    RAILS_ENV: test
  services:
    - name: postgres:13.4
      alias: db-postgres
    - name: redis
      alias: db-redis
  artifacts:
    expire_in: 31d
    when: always
    paths:
      - coverage/
  script:
    - *bundle_install
    - *yarn_install
    - cp config/application.yml.default config/application.yml
    - cp config/service_providers.localdev.yml config/service_providers.yml
    - cp config/agencies.localdev.yml config/agencies.yml
    - cp config/iaa_gtcs{.localdev,}.yml
    - cp config/iaa_orders{.localdev,}.yml
    - cp config/iaa_statuses{.localdev,}.yml
    - cp config/integration_statuses{.localdev,}.yml
    - cp config/integrations{.localdev,}.yml
    - cp config/partner_account_statuses{.localdev,}.yml
    - cp config/partner_accounts{.localdev,}.yml
    - cp -a keys.example keys
    - cp -a certs.example certs
    - cp pwned_passwords/pwned_passwords.txt.sample pwned_passwords/pwned_passwords.txt
    - "echo -e \"test:\n  redis_url: 'redis://redis:6379/0'\n  redis_throttle_url: 'redis://localhost:6379/1'\" > config/application.yml"
    - bundle exec rake db:create db:migrate --trace
    - bundle exec rake db:seed
    - bundle exec rake knapsack:rspec

lint:
  extends: .on_push
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *yarn_cache
    - <<: *assets_cache
  script:
    - *bundle_install
    - *yarn_install
    - make lint

js_build:
  extends: .on_push
  stage: test
  cache:
    - <<: *ruby_cache
    - <<: *yarn_production_cache
  script:
    - *bundle_install
    - *yarn_production_install
    - bundle exec rake assets:precompile

js_tests:
  extends: .on_push
  stage: test
  cache:
    - <<: *yarn_cache
  script:
    - *yarn_install
    - yarn test

coverage:
  extends: .on_push
  stage: after_test
  script:
    - *bundle_install
    - bundle exec spec/simplecov_merger.rb
    - mv coverage/coverage/* coverage/
  artifacts:
      reports:
        cobertura: coverage/coverage.xml
      name: coverage
      expire_in: 31d
      paths:
        - coverage/index.html
        - coverage/assets/
        - coverage/coverage.xml

artifact:
  extends: .on_push
  stage: after_test
  cache:
    - <<: *yarn_production_cache
  variables:
    NODE_ENV: 'production'
    RAILS_ENV: 'production'
  script:
    - cp config/application.yml.default.ci config/application.yml
    - ./deploy/build
    - ./deploy/build-post-config
    - make build_artifact ARTIFACT_DESTINATION_FILE='./tmp/idp.tar.gz'

# Sync from GitHub
include:
  project: 'lg/identity-gitlab'
  ref: 'main'
  file: '.gitlab-ci-sync.yml'
