# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tableparser` gem.
# Please instead update this file by running `bin/tapioca gem tableparser`.


# Helpers for table formatted results
#
# source://tableparser//lib/tableparser/version.rb#1
module Tableparser
  class << self
    # Parses output from tables (often from SQL queries) to CSV-like array of
    # rows of strings.
    #
    # It expects the contents of +io+ to look something like this, and will
    # skip over rows that don't match the format.
    #
    #     +---------+---------+
    #     | col1    | col2    |
    #     +---------+---------+
    #     | val     | val     |
    #     | val     | val     |
    #     +---------+---------+
    #
    # The block form streams from the input IO instead of reading all at once
    #
    # @example
    #   Tableparser.parse(STDIN) # =>
    #   [['col1', 'col2'], ['val', 'val'], ['val', 'val']]
    # @example
    #   Tableparser.parse(STDIN) do |row|
    #   # ...
    #   end
    # @overload parse
    # @overload parse
    #
    # source://tableparser//lib/tableparser.rb#34
    def parse(io); end

    # @api private
    # @example parse a line
    #   parse_line("| banklin_card_token           | state       |")
    #   => ['banklin_card_token', 'state']
    # @param line [String]
    # @return [Array<String>]
    #
    # source://tableparser//lib/tableparser.rb#89
    def parse_line(line); end

    # Assumes +struct+ was from +Struct.new(:col1, :col2)+. The code sets values on
    # the struct by name, not by index.
    #
    # *Note*: the code will downcase column names when setting.
    #
    # Since it builds on +.parse+, the block here form also streams from the
    # input IO
    #
    # @overload parse_to_struct
    # @overload parse
    #
    # source://tableparser//lib/tableparser.rb#63
    def parse_to_struct(io, struct); end

    # @api private
    #
    # source://tableparser//lib/tableparser.rb#94
    def to_struct(values, struct, cols); end
  end
end

# source://tableparser//lib/tableparser/version.rb#2
Tableparser::VERSION = T.let(T.unsafe(nil), String)
