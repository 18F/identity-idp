{
  "extends": "airbnb",
  "parser": "@babel/eslint-parser",
  "plugins": ["prettier", "@babel"],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "mocha": true
  },
  "globals": {
    "expect": true
  },
  "rules": {
    "@babel/no-unused-expressions": "error",
    "class-methods-use-this": "off",
    "consistent-return": "off",
    "curly": ["error", "all"],
    "prettier/prettier": "error",
    "func-names": 0,
    "function-paren-newline": "off",
    "prefer-arrow-callback": 0,
    "import/prefer-default-export": "off",
    "import/extensions": ["off", "never"],
    "import/no-extraneous-dependencies": "error",
    "indent": "off",
    "max-classes-per-file": "off",
    "newline-per-chained-call": "off",
    "no-console": "error",
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "no-param-reassign": ["off", "never"],
    "no-confusing-arrow": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "NewExpression[callee.name='Event']",
        "message": "Use CustomEvent constructor with polyfill for Internet Explorer"
      },
      {
        "selector": "AssignmentExpression[left.property.name='href'][right.type=/(Template)?Literal/]",
        "message": "Do not assign window.location.href to a string or string template to avoid losing i18n parameters"
      },
      {
        "selector": "CallExpression[callee.object.name=/^(it|describe|context)$/][callee.property.name='only'] > MemberExpression",
        "message": "Test exclusivity should not be committed"
      }
    ],
    "no-unused-expressions": "off",
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "implicit-arrow-linebreak": "off",
    "object-curly-newline": "off",
    "operator-linebreak": "off",
    "react/jsx-curly-newline": "off",
    "react/jsx-indent": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-wrap-multilines": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "require-await": "error"
  },
  "settings": {
    "import/internal-regex": "^@18f/identity-"
  },
  "overrides": [
    {
      "files": "spec/javascripts/**/*",
      "rules": {
        "react/jsx-props-no-spreading": "off"
      }
    }
  ]
}
